@model NTU_FYP_REBUILD_17.ViewModels.UpdateGameViewModel

@{
    ViewBag.Title = "Get Update Game";
    Layout = "~/Views/Shared/_LayoutGameTherapist.cshtml";

    if (ViewBag.Modal == "true")
    {
        <script type="text/javascript">
            $(window).on('load', function() {
                $('#MyModal').modal('show');
            });
        </script>
    }
}
<div class="portlet light ">
    <div class="portlet-title tabbable-line">
        <div class="caption caption-md">
            <i class="icon-globe theme-font hide"></i>
            <span class="caption-subject font-blue-madison bold uppercase">Update Game</span>
        </div>
    </div>
    @using (Html.BeginForm("UpdateGame", "GameTherapist", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "form1" }))
    {
        @Html.HiddenFor(p => p.gameID, new { @Value = @Model.gameID, @id = "ab" })

        <div class="panel panel-default">
            <div class="panel-heading"><b>Game Information</b></div>
            <div class="panel-body">
                <div class="portlet-body">
                    <div class="col-md-offset-2">
                        <p style="color:red">@ViewData["Error1"]</p>
                        @Html.ValidationSummary("", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <div class="col-md-2 control-label">Game Title</div>
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.gameName, new { @class = "form-control", @Value = @Model.gameName, @readonly = true })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-md-2 control-label" type="radio">Game Category<a style="color:red; font-size:large">*</a></label>
                        <div class="col-md-10">
                            @foreach (var i in Model.gameCategory.Select((value, index) => new { index, value }))
                            {
                                @Html.HiddenFor(m => m.gameCategory[i.index].categoryID, new { @Value = @Model.gameCategory[i.index].categoryID, @id = "categoryID" + i.index })

                                if (i.value.categoryChecked == true)
                                {
                                    @Html.CheckBoxFor(m => i.value.categoryChecked, new { @id = "oldCategory" + i.index, @checked = "checked"})@Html.Label(i.value.categoryName)
                                }
                                else
                                {
                                    @Html.CheckBoxFor(m => i.value.categoryChecked, new { @id = "oldCategory" + i.index })@Html.Label(i.value.categoryName)
                                }
                                @:&nbsp;
                                @Html.HiddenFor(m => m.gameCategory[i.index].categoryChecked, new { @Value = "", @id = "newCategory" + i.index })
                            }
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-2 control-label">Game Description<a style="color:red; font-size:large">*</a></div>
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.gameDesc, new { @class = "form-control", @Value = @Model.gameDesc, required = "required" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-2 control-label">Game Duration (in min)</div>
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.duration, new { @class = "form-control", @Value = @Model.duration, @type = "number", @max = "60", @min = "1" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-2 control-label">Game Rating (1 to 10)</div>
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.rating, new { @class = "form-control", @type = "number", @Value = @Model.rating, @max = "10", @min = "1" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-2 control-label">Difficulty<a style="color:red; font-size:large">*</a></div>
                        <div class="col-md-10" type="radio">
                            @if (Model.difficulty == "Medium")
                            {
                                @Html.RadioButtonFor(m => m.difficulty, "Low", new { @id = "option1" })@Html.Label("Low")
                                @:&nbsp;
                                @Html.RadioButtonFor(m => m.difficulty, "Medium", new { @id = "option2", @checked = "checked" })@Html.Label("Medium")
                                @:&nbsp;
                                @Html.RadioButtonFor(m => m.difficulty, "Hard", new { @id = "option3" })@Html.Label("Hard")
                            }
                            else if (Model.difficulty == "Hard")
                            {
                                @Html.RadioButtonFor(m => m.difficulty, "Low", new { @id = "option1" })@Html.Label("Low")
                                @:&nbsp;
                                @Html.RadioButtonFor(m => m.difficulty, "Medium", new { @id = "option2" })@Html.Label("Medium")
                                @:&nbsp;
                                @Html.RadioButtonFor(m => m.difficulty, "Hard", new { @id = "option3", @checked = "checked" })@Html.Label("Hard")
                            }
                            else
                            {
                                @Html.RadioButtonFor(m => m.difficulty, "Low", new { @id = "option1", @checked = "checked" })@Html.Label("Low")
                                @:&nbsp;
                                @Html.RadioButtonFor(m => m.difficulty, "Medium", new { @id = "option2" })@Html.Label("Medium")
                                @:&nbsp;
                                @Html.RadioButtonFor(m => m.difficulty, "Hard", new { @id = "option3" })@Html.Label("Hard")
                            }
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-2 control-label">Game Created By</div>
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.gameCreatedBy, new { @class = "form-control", @Value = @Model.gameCreatedBy, required = "required", @readonly = true })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-default">
            <div class="panel-heading"><b>Performance Metrics</b></div>
            <div class="panel-body">
                <div class="portlet-body">
                    <table class="table table-striped table-bordered table-hover dt-responsive" id="sample_4" cellspacing="0">
                        <thead>
                            <tr class="uppercase">
                                <th> No </th>
                                <th> Metric Name </th>
                                <th> Metric Information </th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var i in Model.performanceMetric.Select((value, index) => new { index, value }))
                            {
                                <tr>
                                    <td>@( i.index + 1 )</td>
                                    <td>@i.value.performanceMetricName</td>
                                    <td>@i.value.performanceMetricDetail</td>
                                    <td>
                                        <a id="@i.value.pmnID" class="btn dark btn-sm btn-outline sbold uppercase red" data-target="#MyModal2" data-toggle="modal" onclick="OpenModalPopUpUpdate('@i.value.performanceMetricName', '@i.value.performanceMetricDetail', this.id);"><i class="fa fa-edit"></i> Update </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <div style="text-align:center">
                        <a class="btn green btn-outline sbold uppercase" data-target="#addPerformanceMetric" data-toggle="modal"><i class="fa fa-plus"></i> Add Performance Metric </a>
                    </div>
                    <hr />
                 </div>
            </div>
        </div>
        <div class="margiv-top-10 text-center">
            <input class="space btn grey" type="button" onclick="window.location.replace('@Url.Action("ManageGame", "GameTherapist")')" value="Cancel" />
            <input id="submit2" type="submit" class="space btn btn-primary" value="Save Changes" />
        </div>
    }
</div>

<div class="modal fade" id="MyModal1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                @using (Html.BeginForm("UpdatePerformanceMetric", "GameTherapist", new { @class = "form-horizontal" }))
                {
                    @Html.HiddenFor(p => p.gameID, new { @Value = "", @id = "itemID2" })

                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h4>Update Performance Metric</h4>
                    </div>
                    <div class="form-body">
                        <div class="well">
                            <div class="form-group form-md-line-input has-success">
                                <label class="col-md-4 control-label" for="form_control_1">Metric Name<a style="color:red; font-size:large">*</a></label>
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.performanceMetricName, new { @class = "form-control", @id = "performanceMetricName", @Value = "", @row = "3", required = "required" })
                                    <div class="form-control-focus"> </div>
                                </div>
                            </div>
                        </div>
                        <div class="well">
                            <div class="form-group form-md-line-input has-success">
                                <label class="col-md-4 control-label" for="form_control_1">Metric Detail<a style="color:red; font-size:large">*</a></label>
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.performanceMetricDetail, new { @class = "form-control", @id = "performanceMetricDetail", @Value = "", @row = "3", required = "required" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-actions" align="center">
                        <div class="row">
                            <button type="button" data-dismiss="modal" class="btn default">Cancel</button>
                            <button id="submit" type="submit" class="btn blue">Submit</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="addPerformanceMetric">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                @using (Html.BeginForm("AddPerformanceMetric", "GameTherapist", new { @class = "form-horizontal" }))
                {
                    @Html.HiddenFor(p => p.gameID, new { @Value = @Model.gameID, @id = "ab" })

                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h4>Add Performance Metric</h4>
                    </div>
                    <div class="form-body">
                        <div class="well">
                            <div class="form-group form-md-line-input has-success">
                                <label class="col-md-4 control-label" for="form_control_1">Metric Name<a style="color:red; font-size:large">*</a></label>
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.performanceMetricName, new { @class = "form-control", @id = "performanceMetricName", @Value = "", @row = "3", required = "required" })
                                    <div class="form-control-focus"> </div>
                                </div>
                            </div>
                        </div>
                        <div class="well">
                            <div class="form-group form-md-line-input has-success">
                                <label class="col-md-4 control-label" for="form_control_1">Metric Detail<a style="color:red; font-size:large">*</a></label>
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.performanceMetricDetail, new { @class = "form-control", @id = "performanceMetricDetail", @Value = "", @row = "3", required = "required" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-actions" align="center">
                        <div class="row">
                            <button type="button" data-dismiss="modal" class="btn default">Cancel</button>
                            <button id="submit" type="submit" class="btn blue">Submit</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script src="~/Content/global/plugins/jquery.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/js.cookie.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/jquery-slimscroll/jquery.slimscroll.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/jquery.blockui.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/bootstrap-switch/js/bootstrap-switch.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/bootstrap-fileinput/bootstrap-fileinput.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/jquery.sparkline.min.js" type="text/javascript"></script>
<script src="~/Content/global/scripts/app.min.js" type="text/javascript"></script>
<script src="~/Content/pages/scripts/profile.min.js" type="text/javascript"></script>

<script>
    function goBack() {
        window.history.go(-2);
    }

    function OpenModalPopUpUpdate(metricName, metricDetail, itemID) {
        document.getElementById('itemID').value = itemID;
        document.getElementById('performanceMetricName').value = metricName;
        document.getElementById('performanceMetricDetail').value = metricDetail;
    };

    $('#submit2').click(function () {
        for (var i = 0; i < @Model.gameCategory.Count; i++)
        {
            if (document.getElementById('categoryID' + i.toString()).value != "")
            {
                if (document.getElementById('oldCategory' + i.toString()).checked)
                    document.getElementById('newCategory' + i.toString()).value = true;
                else
                    document.getElementById('newCategory' + i.toString()).value = false;
            }
        }
        return true;
    });
</script>