@using Newtonsoft.Json;
@model NTU_FYP_REBUILD_17.ViewModels.AddGameViewModel

@{
    ViewBag.Title = "Add Game";
    Layout = "~/Views/Shared/_LayoutGameTherapist.cshtml";

    if (ViewBag.Modal == "true")
    {
        <script type="text/javascript">
            $(window).on('load', function () {
                $('#MyModal').modal('show');
            });
        </script>
    }
}

<div class="portlet light ">
    @using (Html.BeginForm("AddGames", "GameTherapist", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "form1" }))
    {
        @Html.AntiForgeryToken()
        <div class="caption caption-md">
            <i class="icon-globe theme-font hide"></i>
            <span class="caption-subject font-blue-madison bold uppercase">Add Game</span>
        </div>
        <hr />

        <div align="center">
            <h3>Add Game</h3>
        </div>
        <div class="col-md-offset-2">
            <p style="color:red">@ViewBag.Error</p>
            @Html.ValidationSummary("", new { @class = "text-danger" })
        </div>
        <hr />

            <div class="form-group">
                <div class="col-md-2 control-label">Game Title<a style="color:red; font-size:large">*</a></div>
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.gameName, new { @class = "form-control", @id="userGameName", required = "required" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2 control-label" type="radio">Game Category<a style="color:red; font-size:large">*</a></label>
                <div class="col-md-10">
                    @foreach (var i in Model.category.Select((value, index) => new { index, value }))
                    {
                        @Html.HiddenFor(m => m.category[i.index].categoryID, new { @Value = @Model.category[i.index].categoryID, @id = "categoryID" + i.index })

                        @Html.CheckBoxFor(m => i.value.categoryChecked, new { @id = "oldCategory" + i.index })@Html.Label(i.value.categoryName)
                        @:&nbsp;
                        @Html.HiddenFor(m => m.category[i.index].categoryChecked, new { @Value = "", @id = "newCategory" + i.index })
                    }
                </div>
            </div>
            <div align="center">
                <a class="btn green btn-outline sbold uppercase" data-target="#MyModal3" data-toggle="modal" onclick="OpenModalPopUp();"><i class="fa fa-plus"></i> Add Category </a>
            </div>
            <br />
            <div class="form-group">
                <div class="col-md-2 control-label">Game Description<a style="color:red; font-size:large">*</a></div>
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.gameDesc, new { @class = "form-control", @id="userGameDesc", required = "required" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-2 control-label">Game Duration (in min)</div>
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.duration, new { @class = "form-control", @id = "userGameDuration", @type = "number", @Value = "", @max = "60", @min = "1" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-2 control-label">Game Rating (1 to 10)</div>
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.rating, new { @class = "form-control", @id = "userGameRating", @type = "number", @Value = "", @max = "10", @min = "1" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-2 control-label">Difficulty<a style="color:red; font-size:large">*</a></div>
                <div class="col-md-10" type="radio">
                    @if (Model.difficulty == "Medium")
                    {
                        @Html.RadioButtonFor(m => m.difficulty, "Low", new { @id = "option1" })@Html.Label("Low")
                        @:&nbsp;
                        @Html.RadioButtonFor(m => m.difficulty, "Medium", new { @id = "option2", @checked = "checked" })@Html.Label("Medium")
                        @:&nbsp;
                        @Html.RadioButtonFor(m => m.difficulty, "Hard", new { @id = "option3" })@Html.Label("Hard")
                    }
                    else if (Model.difficulty == "Hard")
                    {
                        @Html.RadioButtonFor(m => m.difficulty, "Low", new { @id = "option1" })@Html.Label("Low")
                        @:&nbsp;
                        @Html.RadioButtonFor(m => m.difficulty, "Medium", new { @id = "option2" })@Html.Label("Medium")
                        @:&nbsp;
                        @Html.RadioButtonFor(m => m.difficulty, "Hard", new { @id = "option3", @checked = "checked" })@Html.Label("Hard")
                    }
                    else
                    {
                        @Html.RadioButtonFor(m => m.difficulty, "Low", new { @id = "option1", @checked = "checked" })@Html.Label("Low")
                        @:&nbsp;
                        @Html.RadioButtonFor(m => m.difficulty, "Medium", new { @id = "option2" })@Html.Label("Medium")
                        @:&nbsp;
                        @Html.RadioButtonFor(m => m.difficulty, "Hard", new { @id = "option3" })@Html.Label("Hard")
                    }
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-2 control-label">Game Created By<a style="color:red; font-size:large">*</a></div>
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.gameCreatedBy, new { @class = "form-control", @id = "userGameCreated", required = "required" })
                </div>
            </div>
        <div class="margiv-top-10 text-center">
            <input class="space btn grey" type="button" onclick="history.back()" value="Cancel" />
            <input id="submit" type="submit" class="space btn btn-primary" value="Add" />
        </div>
    }
</div>

<div class="modal fade" id="MyModal3">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                @using (Html.BeginForm("AddGameCategoryFromGame", "GameTherapist", new { enctype = "form-horizontal" }))
                {
                    @Html.HiddenFor(p => p.gameName, new { @Value = "", @id = "gameName" })
                    @Html.HiddenFor(p => p.gameDesc, new { @Value = "", @id = "gameDesc" })
                    @Html.HiddenFor(p => p.duration, new { @Value = "", @id = "duration" })
                    @Html.HiddenFor(p => p.rating, new { @Value = "", @id = "rating" })
                    @Html.HiddenFor(p => p.difficulty, new { @Value = "", @id = "difficulty" })
                    @Html.HiddenFor(p => p.gameCreatedBy, new { @Value = "", @id = "gameCreatedBy" })

                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h4>Add Category</h4>
                    </div>
                    <div class="form-body">
                        <div class="well">
                            <div class="form-group form-md-line-input has-success">
                                <label class="col-md-4 control-label" for="form_control_1">New Category<a style="color:red; font-size:large">*</a></label>
                                <div class="col-md-8">
                                    @Html.TextBoxFor(m => m.categoryOthers, new { @class = "form-control", @row = "3", @placeholder = "Please type a new category here.", required = "required" })
                                    <div class="form-control-focus"> </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer" style="text-align:center">
                        <button class="btn btn-default grey" data-dismiss="modal">Cancel</button>
                        <input id="submit2" type="submit" class="space btn btn-primary" value="Submit" />
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script src="~/Content/global/plugins/jquery.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/js.cookie.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/jquery-slimscroll/jquery.slimscroll.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/jquery.blockui.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/bootstrap-switch/js/bootstrap-switch.min.js" type="text/javascript"></script>

<script src="~/Content/global/plugins/bootstrap-fileinput/bootstrap-fileinput.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/jquery.sparkline.min.js" type="text/javascript"></script>
<script src="~/Content/global/scripts/app.min.js" type="text/javascript"></script>
<script src="~/Content/pages/scripts/profile.min.js" type="text/javascript"></script>


<script src="~/Content/global/plugins/moment.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/bootstrap-daterangepicker/daterangepicker.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/bootstrap-datepicker/js/bootstrap-datepicker.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/bootstrap-timepicker/js/bootstrap-timepicker.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/bootstrap-datetimepicker/js/bootstrap-datetimepicker.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/clockface/js/clockface.js" type="text/javascript"></script>
<script src="~/Content/pages/scripts/components-date-time-pickers.min.js" type="text/javascript"></script>

@*Stepper*@
<script src="~/Content/global/scripts/stepper-script.js" type="text/javascript"></script>
<link href="~/Content/global/css/stepper-style.css" rel="stylesheet" type="text/css" />

<script>
    function OpenModalPopUp() {
        document.getElementById('gameName').value = document.getElementById('userGameName').value;
        document.getElementById('gameDesc').value = document.getElementById('userGameDesc').value;
        document.getElementById('duration').value = document.getElementById('userGameDuration').value;
        document.getElementById('rating').value = document.getElementById('userGameRating').value;
        document.getElementById('gameCreatedBy').value = document.getElementById('userGameCreated').value;

        if (document.getElementById('option1').checked)
        {
            document.getElementById('difficulty').value = "Low";
        }
        else if (document.getElementById('option2').checked)
        {
            document.getElementById('difficulty').value = "Medium";
        }
        else if (document.getElementById('option3').checked)
        {
            document.getElementById('difficulty').value = "Hard";
        }
    };

    $('#submit').click(function () {
        for (var i = 0; i < @Model.category.Count; i++)
        {
            if (document.getElementById('categoryID' + i.toString()).value != "")
            {
                if (document.getElementById('oldCategory' + i.toString()).checked)
                    document.getElementById('newCategory' + i.toString()).value = true;
                else
                    document.getElementById('newCategory' + i.toString()).value = false;
            }
        }
        return true;
    });
</script>


@*
    <div class="portlet light ">
        <div class="portlet-title tabbable-line">
            <div class="caption caption-md">
                <i class="icon-globe theme-font hide"></i>
                <span class="caption-subject font-blue-madison bold uppercase">Add Game</span>
            </div>
        </div>
        <div class="portlet-body">
            <div class="tab-content">
                @if (TempData["error"] != null)
                {
                    <div class="alert alert-danger  text-center" role="alert">@Html.Raw(TempData["error"])</div>
                }
                <div class="stepper">
                    <ul class="nav nav-tabs " role="tablist">
                        <li role="presentation" class="active" style="width:50%">
                            <a class="persistant-disabled" href="#stepper-step-1" data-toggle="tab" aria-controls="stepper-step-1" role="tab" title="Game Information">
                                <span class="round-tab">1</span>
                            </a>
                        </li>
                        <li role="presentation" class="disabled" style="width:50%">
                            <a class="persistant-disabled" href="#stepper-step-2" data-toggle="tab" aria-controls="stepper-step-2" role="tab" title="Performance Metrics">
                                <span class="round-tab">2</span>
                            </a>
                        </li>
                    </ul>
                    @using (Html.BeginForm("AddGames", "GameTherapist", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "form1" }))
                    {
                        <div class="tab-content">
                            <div class="tab-pane fade in active" role="tabpanel" id="stepper-step-1">
                                <div class="panel panel-default">
                                    <div class="panel-heading"><b>Game Information</b></div>
                                    <div class="panel-body">
                                        <div class="form-group">
                                            <div class="col-md-2 control-label">Game Title<a style="color:red; font-size:large">*</a></div>
                                            <div class="col-md-10">
                                                @Html.TextBoxFor(m => m.gameName, new { @class = "form-control", @id="userGameName", required = "required" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="col-md-2 control-label" type="radio">Game Category<a style="color:red; font-size:large">*</a></label>
                                            <div class="col-md-10">
                                                @foreach (var i in Model.category.Select((value, index) => new { index, value }))
                                                {
                                                    @Html.HiddenFor(m => m.category[i.index].categoryID, new { @Value = @Model.category[i.index].categoryID, @id = "categoryID" + i.index })

                                                    @Html.CheckBoxFor(m => i.value.categoryChecked, new { @id = "oldCategory" + i.index })@Html.Label(i.value.categoryName)
                                                    @:&nbsp;
                                                    @Html.HiddenFor(m => m.category[i.index].categoryChecked, new { @Value = "", @id = "newCategory" + i.index })
                                                }
                                            </div>
                                        </div>
                                        <div align="center">
                                            <a class="btn green btn-outline sbold uppercase" data-target="#MyModal3" data-toggle="modal" onclick="OpenModalPopUp();"><i class="fa fa-plus"></i> Add Category </a>
                                        </div>
                                        <br />
                                        <div class="form-group">
                                            <div class="col-md-2 control-label">Game Description<a style="color:red; font-size:large">*</a></div>
                                            <div class="col-md-10">
                                                @Html.TextBoxFor(m => m.gameDesc, new { @class = "form-control", @id="userGameDesc", required = "required" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-md-2 control-label">Game Duration (in min)<a style="color:red; font-size:large">*</a></div>
                                            <div class="col-md-10">
                                                @Html.TextBoxFor(m => m.duration, new { @class = "form-control", @id = "userGameDuration", @type = "number", @Value = "1", @max = "60", @min = "1", required = "required" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-md-2 control-label">Game Rating (1 to 10)<a style="color:red; font-size:large">*</a></div>
                                            <div class="col-md-10">
                                                @Html.TextBoxFor(m => m.rating, new { @class = "form-control", @id = "userGameRating", @type = "number", @Value = "1", @max = "10", @min = "1", required = "required" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-md-2 control-label">Difficulty<a style="color:red; font-size:large">*</a></div>
                                            <div class="col-md-10" type="radio">
                                                @if (Model.difficulty == "Medium")
                                                {
                                                    @Html.RadioButtonFor(m => m.difficulty, "Low", new { @id = "option1" })@Html.Label("Low")
                                                    @:&nbsp;
                                                    @Html.RadioButtonFor(m => m.difficulty, "Medium", new { @id = "option2", @checked = "checked" })@Html.Label("Medium")
                                                    @:&nbsp;
                                                    @Html.RadioButtonFor(m => m.difficulty, "Hard", new { @id = "option3" })@Html.Label("Hard")
                                                }
                                                else if (Model.difficulty == "Hard")
                                                {
                                                    @Html.RadioButtonFor(m => m.difficulty, "Low", new { @id = "option1" })@Html.Label("Low")
                                                    @:&nbsp;
                                                    @Html.RadioButtonFor(m => m.difficulty, "Medium", new { @id = "option2" })@Html.Label("Medium")
                                                    @:&nbsp;
                                                    @Html.RadioButtonFor(m => m.difficulty, "Hard", new { @id = "option3", @checked = "checked" })@Html.Label("Hard")
                                                }
                                                else
                                                {
                                                    @Html.RadioButtonFor(m => m.difficulty, "Low", new { @id = "option1", @checked = "checked" })@Html.Label("Low")
                                                    @:&nbsp;
                                                    @Html.RadioButtonFor(m => m.difficulty, "Medium", new { @id = "option2" })@Html.Label("Medium")
                                                    @:&nbsp;
                                                    @Html.RadioButtonFor(m => m.difficulty, "Hard", new { @id = "option3" })@Html.Label("Hard")
                                                }
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-md-2 control-label">Game Created By</div>
                                            <div class="col-md-10">
                                                @Html.TextBoxFor(m => m.gameCreatedBy, new { @class = "form-control", @id = "userGameCreated" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <ul class="list-inline text-center">
                                    <li>
                                        <input class="btn grey" type="button" onclick="window.location.replace('@Url.Action("ManageGame", "GameTherapist" )')" value="Cancel" />
                                    </li>
                                    <li>
                                        <a class="btn btn-primary next-step" id="step1">Next</a>
                                    </li>
                                </ul>
                                <hr />
                            </div>

                            <div class="tab-pane fade" role="tabpanel" id="stepper-step-2">
                                <div class="panel panel-default">
                                    <div class="panel-heading"><b>Performance Metrics</b></div>
                                    <div class="panel-body">
                                        <div class="form-group">
                                        </div>
                                    </div>
                                </div>
                                <ul class="list-inline text-center">
                                    <li>
                                        <a class="btn btn-default prev-step">Back</a>
                                    </li>
                                    <li>
                                        <input class="btn grey" type="button" onclick="window.location.replace('@Url.Action("ManageGame", "GameTherapist" )')" value="Cancel" />
                                    </li>
                                    <li>
                                        <input id="submit" type="submit" class="btn btn-primary" value="Add" />
                                    </li>
                                </ul>
                                <hr />
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
*@