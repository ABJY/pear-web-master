@model NTU_FYP_REBUILD_17.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";

    if (ViewBag.Modal == "true")
    {
        <script type="text/javascript">
        $(window).on('load', function() {
            $('#MyModal').modal('show');
        });
        </script>
    }
}

<style type="text/css">
    input[type="radio"] {
        margin: 0 3px 0 10px;
    }

    .glyphicon-remove {
        color: red;
    }

    .glyphicon-ok {
        color: green;
    }
</style>

<link href="~/Content/global/plugins/bootstrap-daterangepicker/daterangepicker.min.css" rel="stylesheet" type="text/css" />
<link href="~/Content/global/plugins/bootstrap-datepicker/css/bootstrap-datepicker3.min.css" rel="stylesheet" type="text/css" />
<link href="~/Content/global/plugins/bootstrap-timepicker/css/bootstrap-timepicker.min.css" rel="stylesheet" type="text/css" />
<link href="~/Content/global/plugins/bootstrap-datetimepicker/css/bootstrap-datetimepicker.min.css" rel="stylesheet" type="text/css" />
<link href="~/Content/global/plugins/clockface/css/clockface.css" rel="stylesheet" type="text/css" />

<div class="portlet light ">
    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <div class="caption caption-md">
            <i class="icon-globe theme-font hide"></i>
            <span class="caption-subject font-blue-madison bold uppercase">Create Account</span>
        </div>
        <hr />

        <div align="center">
            <h3>Create a new account</h3>
        </div>
        <div class="col-md-offset-2">
            <p style="color:red">@ViewBag.Error</p>
            @Html.ValidationSummary("", new { @class = "text-danger" })
        </div>
        <hr />
        <div class="form-group">
            <div class="col-md-2 control-label">User Type</div>
            <div class="col-md-10">
                @*@Html.TextBoxFor(m => m.roleID, new { @class = "form-control" })*@
                @*@Html.DropDownListFor(m => m.roleID, new SelectList(ViewBag.Roles, "Value", "Text", ViewBag.SelectedRoles), new { @class = "form-control" })
                @Html.DropDownList("UserType", null, new { @class = "form-control" })*@
                @Html.TextBoxFor(m => m.userType, new { @id = "oldUserType", @Value = ViewBag.userType, @class = "form-control", disabled = "disabled" })
                @Html.HiddenFor(m => m.userType, new { @Value = "", @id = "newUserType" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2 control-label">Username<a style="color:red; font-size:large">*</a></div>
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.userName, new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(m => m.userName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2 control-label">Email<a style="color:red; font-size:large">*</a></div>
            <div class="col-md-10">
                @if (ViewBag.email != null)
                {
                    @Html.TextBoxFor(m => m.email, new { @id = "oldEmail", @Value = ViewBag.email, @class = "form-control", disabled = "disabled" })
                    @Html.HiddenFor(m => m.email, new { @Value = "", @id = "newEmail" })
                }
                else
                {
                    @Html.TextBoxFor(m => m.email, new { @class = "form-control", required = "required" })
                }
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2 control-label">Password<a style="color:red; font-size:large">*</a></div>
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control nocopy nopaste", @id = "NewPassword", required = "required" })
                <div id="passwordCriteria">
                    <div id="Length" class="glyphicon glyphicon-remove">Must be at least 7 charcters</div><br />
                    <div id="UpperCase" class="glyphicon glyphicon-remove">Must have at least 1 upper case character</div><br />
                    <div id="LowerCase" class="glyphicon glyphicon-remove">Must have at least 1 lower case character</div><br />
                    <div id="Numbers" class="glyphicon glyphicon-remove">Must have at least 1 numeric character</div><br />
                    <div id="Symbols" class="glyphicon glyphicon-remove">Must have at least 1 special character</div><br />
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2 control-label">Confirm Password<a style="color:red; font-size:large">*</a></div>
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control nocopy nopaste", required = "required" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2 control-label">Secret Question<a style="color:red; font-size:large">*</a></div>
            <div class="col-md-10">
                @*@Html.TextBoxFor(m => m.secretQuestion, new { @class = "form-control" })*@
                @*@Html.DropDownListFor(m => m.secretQuestion, new SelectList(ViewBag.Question, "Value", "Text", ViewBag.SelectedQuestion), new { @class = "form-control" })*@
                @Html.DropDownList("SelectedQuestion", null, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2 control-label">Secret Answer<a style="color:red; font-size:large">*</a></div>
            <div class="col-md-10">
                @Html.PasswordFor(m => m.secretAnswer, new { @class = "form-control", required = "required" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2 control-label">Preferred Name<a style="color:red; font-size:large">*</a></div>
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.preferredName, new { @class = "form-control", required = "required" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2 control-label">First Name<a style="color:red; font-size:large">*</a></div>
            <div class="col-md-10">
                @if (ViewBag.firstName != null)
                {
                    @Html.TextBoxFor(m => m.firstName, new { @id = "oldFirstName", @Value = ViewBag.firstName, @class = "form-control", disabled = "disabled" })
                    @Html.HiddenFor(m => m.firstName, new { @Value = "", @id = "newFirstName" })
                }
                else
                {
                    @Html.TextBoxFor(m => m.firstName, new { @class = "form-control", required = "required" })
                }
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2 control-label">Last Name<a style="color:red; font-size:large">*</a></div>
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.lastName, new { @class = "form-control", required = "required" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2 control-label">NRIC<a style="color:red; font-size:large">*</a></div>
            <div class="col-md-10">
                @if (ViewBag.nric != null)
                {
                    @Html.TextBoxFor(m => m.nric, new { @id = "oldNric", @Value = ViewBag.nric, @class = "form-control", disabled = "disabled" })
                    @Html.HiddenFor(m => m.nric, new { @Value = "", @id = "newNric" })
                }
                else
                {
                    @Html.TextBoxFor(m => m.nric, new { @class = "form-control", required = "required" })
                }
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2 control-label">Gender<a style="color:red; font-size:large">*</a></div>
            <div class="col-md-10" type="radio">
                @Html.RadioButtonFor(m => m.gender, "M", new { @id = "option1", @checked = "checked" })@Html.Label("Male")
                @Html.RadioButtonFor(m => m.gender, "F", new { @id = "option2" })@Html.Label("Female")
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2 control-label">Date Of Birth<a style="color:red; font-size:large">*</a></div>
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.DOB, "dd/mm/yyyy", new { @class = "form-control date-picker", @data_date_format = "dd/mm/yyyy", required = "required" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2 control-label">Address<a style="color:red; font-size:large">*</a></div>
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.address, new { @class = "form-control", required = "required" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2 control-label">Handphone No<a style="color:red; font-size:large">*</a></div>
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.handphoneNo, new { @class = "form-control", required = "required" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2 control-label">Office No</div>
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.officeNo, new { @class = "form-control" })
            </div>
        </div>
        <div class="margiv-top-10 text-center">
            <input class="space btn grey" type="button" onclick="window.location.replace('@Url.Action("Index", "Home")')" value="Cancel" />
            <input id="submit" type="submit" class="space btn btn-primary" value="Register" />
        </div>
    }
</div>


<script src="~/Content/global/plugins/jquery.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/js.cookie.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/jquery-slimscroll/jquery.slimscroll.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/jquery.blockui.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/bootstrap-switch/js/bootstrap-switch.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/moment.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/bootstrap-daterangepicker/daterangepicker.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/bootstrap-datepicker/js/bootstrap-datepicker.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/bootstrap-timepicker/js/bootstrap-timepicker.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/bootstrap-datetimepicker/js/bootstrap-datetimepicker.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/clockface/js/clockface.js" type="text/javascript"></script>
<script src="~/Content/global/scripts/app.min.js" type="text/javascript"></script>
<script src="~/Content/pages/scripts/components-date-time-pickers.min.js" type="text/javascript"></script>

<script>
    $(document).ready(function () {
        $(".date-picker").datepicker("setDate", "01/01/1985");      // DD-MM-YYYY
        $("#NewPassword").on('keyup', ValidatePassword)
    });

    $(function () {
        $('.nocopy').bind('copy', function (e) {
            e.preventDefault();
        });
        $('.nopaste').bind('paste', function (e) {
            e.preventDefault();
        });
    });

    /*Actual validation function*/
    function ValidatePassword() {
        /*Array of rules and the information target*/
        var rules = [{
            Pattern: "[A-Z]",
            Target: "UpperCase"
        },
          {
              Pattern: "[a-z]",
              Target: "LowerCase"
          },
          {
              Pattern: "[0-9]",
              Target: "Numbers"
          },
          {
              Pattern: "[!@@#$%^&*]",
              Target: "Symbols"
          }
        ];

        //Just grab the password once
        var password = $(this).val();

        /*Length Check, add and remove class could be chained*/
        /*I've left them seperate here so you can see what is going on */
        /*Note the Ternary operators ? : to select the classes*/
        $("#Length").removeClass(password.length > 6 ? "glyphicon-remove" : "glyphicon-ok");
        $("#Length").addClass(password.length > 6 ? "glyphicon-ok" : "glyphicon-remove");

        /*Iterate our remaining rules. The logic is the same as for Length*/
        for (var i = 0; i < rules.length; i++) {

            $("#" + rules[i].Target).removeClass(new RegExp(rules[i].Pattern).test(password) ? "glyphicon-remove" : "glyphicon-ok");
            $("#" + rules[i].Target).addClass(new RegExp(rules[i].Pattern).test(password) ? "glyphicon-ok" : "glyphicon-remove");
        }
    }

    $('#submit').click(function () {
        if (document.getElementById('Length').classList.contains("glyphicon-remove"))
            return false;

        if (document.getElementById('UpperCase').classList.contains("glyphicon-remove"))
            return false;

        if (document.getElementById('LowerCase').classList.contains("glyphicon-remove"))
            return false;

        if (document.getElementById('Numbers').classList.contains("glyphicon-remove"))
            return false;

        if (document.getElementById('Symbols').classList.contains("glyphicon-remove"))
            return false;

        document.getElementById('newUserType').value = document.getElementById('oldUserType').value;
        document.getElementById('newEmail').value = document.getElementById('oldEmail').value;
        document.getElementById('newFirstName').value = document.getElementById('oldFirstName').value;
        document.getElementById('newNric').value = document.getElementById('oldNric').value;

        return true;
    });
</script>
