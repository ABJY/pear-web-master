@model NTU_FYP_REBUILD_17.ViewModels.PrescriptionViewModel
@using NTU_FYP_REBUILD_17.Models

@{
    ViewBag.Title = "ManagePrescription";
    Layout = "~/Views/Shared/_LayoutSupervisor.cshtml";
}

@{
    int ID = 0;
}

<div class="container">

    <ul class="nav nav-pills">
        <li class="active"><a data-toggle="pill" href="#prescription">Prescription</a></li>
        <li><a data-toggle="pill" href="#med">Medication</a></li>
    </ul>

    <div class="tab-content">
        <div id="prescription" class="tab-pane fade in active">
            <div class="portlet box blue-madison">
                <div class="portlet-title">
                    <div class="caption">
                        <i class="fa fa-folder-open-o"></i>
                        @Model.patient.firstName  @Model.patient.lastName's Prescription Records
                    </div>
                    <div class="tools"> </div>
                </div>

                <div class="portlet-body">
                    @if (TempData["success"] != null)
                    {
                        <div class="alert alert-success text-center" role="alert">@TempData["success"]</div>
                    }

                    @if (TempData["error"] != null)
                    {
                        <div class="alert alert-danger  text-center" role="alert">@Html.Raw(TempData["error"])</div>
                    }


                    <h4><b><u>Active Prescriptions</u></b></h4>
                    <table class="table table-striped table-bordered table-hover dt-responsive" id="sample_3" cellspacing="0">

                        <thead>
                            <tr>
                                <th class="min-tablet">Drug Name</th>
                                <th class="desktop4">Period</th>
                                <th class="desktop4">To Be Taken</th>
                                <th class="desktop4">Start Date</th>
                                <th class="desktop4">End Date</th>
                                <th class="desktop4">Time Start</th>
                                <th class="desktop4"></th>
                                <th class="none">Dosage</th>
                                <th class="none">Instruction</th>
                                <th class="none">Frequency</th>
                                <th class="none">Notes</th>


                            </tr>
                        </thead>
                        <tbody>
                            @{ var ActiveList = Model.patientPrescriptions.Where(x => x.prescription.endDate >= DateTime.Today);}

                            @foreach (var item in ActiveList)
                            {
                                <tr>
                                    <td>@item.PrescriptionName</td>

                                    @if (item.prescription.isChronic == 1)
                                    {
                                        <td>Long Term</td>
                                    }
                                    else
                                    {
                                        <td>Short Term</td>

                                    }

                                    @if (item.prescription.afterMeal == 1 && item.prescription.beforeMeal == 0)
                                    {
                                        <td>After Meal</td>}
                                    else if (item.prescription.afterMeal == 0 && item.prescription.beforeMeal == 1)
                                    {
                                        <td>Before Meal</td>
                                    }
                                    @*else if (item.prescription.afterMeal == 1 && item.prescription.beforeMeal == 1)
                                        {
                                            <td>Before/After Meal</td>
                                        }*@

                                    <td>@item.prescription.startDate.ToString("dd/MM/yyyy")</td>
                                    <td>@item.prescription.endDate.Value.ToString("dd/MM/yyyy")</td>
                                    @if (item.prescription.timeStart != null)
                                    {
                                        <td>@item.prescription.timeStart</td>
                                    }
                                    else
                                    {
                                        if (item.prescription.afterMeal == 1)
                                        {
                                            <td>09:00:00</td>
                                        }
                                        else
                                        {
                                            <td>15:00:00</td>

                                        }
                                    }

                                    <td>
                                        <button id="@item.prescription.prescriptionID" class="btn btn-primary btn-sm space edit" type="submit">Edit</button>
                                        <a href="@Url.Action("DeletePrescription", "Supervisor", new { pscpId = item.prescription.prescriptionID, patientId = @Model.patient.patientID })" class="btn btn-sm red space" onclick="return confirm('Are you sure you want to delete?')">
                                            Delete
                                        </a>
                                    </td>
                                    <td>
                                        @item.prescription.dosage
                                     
                                    </td>
                                    <td>@item.prescription.instruction</td>
                                    <td>@item.prescription.frequencyPerDay</td>
                                    @if (item.prescription.notes != null)
                                    {
                                    <td>@item.prescription.notes</td>
                                    }
                                    else {
                                        <td>nil</td>
                                    }
                                </tr>

                            }

                        </tbody>

                    </table>

                    <br /><br /><br />

                    <h4><b><u>Past Prescriptions</u></b></h4>

                    <table class="table table-striped table-bordered table-hover dt-responsive" id="sample_4" cellspacing="0">

                        <thead>
                            <tr>
                                <th class="min-tablet">Drug Name</th>
                                <th class="desktop4">Period</th>
                                <th class="desktop4">To Be Taken</th>
                                <th class="desktop4">Start Date</th>
                                <th class="desktop4">End Date</th>
                                <th class="desktop4">Time Start</th>
                                <th class="desktop4"></th>
                                <th class="none">Dosage</th>
                                <th class="none">Instruction</th>
                                <th class="none">Frequency</th>
                                <th class="none">Notes</th>

                            </tr>
                        </thead>
                        <tbody>
                            @{ var PastList = Model.patientPrescriptions.Where(x => x.prescription.endDate <= DateTime.Today);}

                            @foreach (var item in PastList)
                            {
                            <tr>
                                <td>@item.PrescriptionName</td>
                                @if (item.prescription.isChronic == 1)
                                {
                                    <td>Long Term</td>
                                }
                                else
                                {
                                    <td>Short Term</td>

                                }
                                @if (item.prescription.afterMeal == 1 && item.prescription.beforeMeal == 0)
                                {
                                    <td>After Meal</td>}
                                else if (item.prescription.afterMeal == 0 && item.prescription.beforeMeal == 1)
                                {
                                    <td>Before Meal</td>
                                }
                                @*else if (item.prescription.afterMeal == 1 && item.prescription.beforeMeal == 1)
        {
            <td>Before/After Meal</td>
        }*@

                                <td>@item.prescription.startDate.ToString("dd/MM/yyyy")</td>
                                <td>@item.prescription.endDate.Value.ToString("dd/MM/yyyy")</td>
                                @if (item.prescription.timeStart != null)
                                {
                                    <td>@item.prescription.timeStart</td>
                                }
                                else
                                {
                                    if (item.prescription.afterMeal == 1)
                                    {
                                        <td>09:00:00</td>
                                    }
                                    else
                                    {
                                        <td>15:00:00</td>

                                    }
                                }
                                <td>
                                    <button id="@item.prescription.prescriptionID" class="btn btn-primary btn-sm space edit" type="submit">Edit</button>
                                    <a href="@Url.Action("DeletePrescription", "Supervisor", new { pscpId = item.prescription.prescriptionID, patientId = @Model.patient.patientID })" class="btn btn-sm red space" onclick="return confirm('Are you sure you want to delete?')">
                                        Delete
                                    </a>
                                </td>
                                <td>
                                    @item.prescription.dosage

                                </td>
                                <td>@item.prescription.instruction</td>
                                <td>@item.prescription.frequencyPerDay</td>
                                @if (item.prescription.notes != null)
                                {
                                    <td>@item.prescription.notes</td>
                                }
                                else
                                {
                                    <td>nil</td>
                                }
                            </tr>

                            }

                        </tbody>
                    </table>



                    <br /><br />

                    <div class="margiv-top-10 margin-bottom-10 pull-right">
                        <button id="create" class="btn btn-primary space" type="submit">Create</button>
                        <input class="btn grey" type="button" onclick="window.location.replace('@Url.Action("ManagePatient", "Supervisor")')" value="Cancel" />
                    </div>
                    <br /><br />

                </div>
            </div>
        </div>


        @*Tab 2*@
        <div id="med" class="tab-pane fade">
            <div class="portlet box blue-madison">
                <div class="portlet-title">
                    <div class="caption">
                        <i class="fa fa-folder-open-o"></i>
                        @Model.patient.firstName  @Model.patient.lastName's Medication Records
                    </div>
                    <div class="tools"> </div>
                </div>

                <div class="portlet-body">

                    @if (TempData["success"] != null)
                    {
                        <div class="alert alert-success text-center" role="alert">@TempData["success"]</div>
                    }

                    @if (TempData["error"] != null)
                    {
                        <div class="alert alert-danger  text-center" role="alert">@Html.Raw(TempData["error"])</div>
                    }
                    <table class="table table-striped table-bordered table-hover dt-responsive" id="sample_5" cellspacing="0">


                        <thead>
                            <tr>
                                <th class="min-tablet">Prescription Name</th>
                                <th class="desktop4">Allocated Date</th>
                                <th class="desktop4">Allocated Time</th>
                                <th class="desktop4">Date Taken</th>
                                <th class="desktop4">Time Taken</th>
                                <th class="desktop4">Administered by</th>

                                <th></th>



                            </tr>
                        </thead>
                        <tbody>
                            @{var medList = Model.patientMedication.OrderByDescending(s => s.med.createDateTime); }
                            @foreach (var x in Model.patientMedication)
                            {
                                <tr>
                                    <td>@x.PrescriptionName</td>
                                    <td>@x.med.dateForMedication.ToString("dd/MM/yyyy")</td>
                                    <td>@x.med.timeForMedication</td>
                                    @if (x.med.dateTaken != null)
                                    {
                                        <td>@x.med.dateTaken.Value.ToString("dd/MM/yyyy")</td>
                                    }
                                    else
                                    {
                                        <td></td>
                                    }
                                    <td>@x.med.timeTaken</td>
                                    <td>@x.userFullname</td>

                                    <td>
                                        @if (x.med.dateTaken != null)
                                        {
                                            <button id="@x.med.medicationLogID" class="btn btn-success btn-sm space editMed" type="submit"><i class="fa fa-check"></i></button>
                                        }
                                        else
                                        {
                                            <button id="@x.med.medicationLogID" class="btn btn-primary btn-sm space editMed" type="submit"><i class="fa fa-check"></i></button>

                                        }
                                    </td>

                                </tr>
                            }
                        </tbody>
                    </table>
                    <br /><br />

                    <div class="margiv-top-10 margin-bottom-10 pull-right">
                        @*<button id="create1" class="btn btn-primary space" type="submit">Create</button>*@
                        <input class="btn grey" type="button" onclick="window.location.replace('@Url.Action("Index", "Supervisor")')" value="Cancel" />
                    </div>
                    <br /><br />
                </div>
            </div>
        </div>
    </div>
</div>
@*Modal for Create*@
<div id="CreateModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            @using (Html.BeginForm("AddPrescription", "Supervisor", FormMethod.Post, new { @role = "form", @id = "form1" }))
            {
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title" id="modal-title">Create Patient's Prescription</h4>
                </div>
                <div class="modal-body" id="table-body">
                    @Html.HiddenFor(m => m.patient.patientID, new { @Value = @Model.patient.patientID, @id = "ab" })
                    <table>
                        <thead>
                        </thead>
                        <tbody class="table">
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">To be taken:</label>
                                        <div class="col-md-10">

                                            @Html.DropDownListFor(x => x.mealID, new List<SelectListItem>
                                                   {
                                                         new SelectListItem() {Text = "After Meal", Value="1"},
                                                         new SelectListItem() {Text = "Before Meal", Value="0"},
                                                         //new SelectListItem() {Text = "Before/After Meal", Value="2"},
                                                   }, new { @class = "form-control" })
                                            <br />
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            Drug Name
                                        </label>
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(m => m.prescription.drugNameID, new SelectList(Model.drugList, "list_prescriptionID", "value"), new { @class = "form-control", required = "required", id = "drugNameCheck" })
                                            <br />
                                        </div>
                                    </div>
                                </td>

                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group" id="drugNameOther" style='display:none;'>
                                        <label class="col-md-10 control-label">
                                            <i class="required"></i>
                                            Please specify
                                        </label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(m => m.inputDrugName, new { @class = "form-control" })
                                            <br />

                                        </div>
                                    </div>

                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            Period
                                        </label>
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(m => m.prescription.isChronic,new List<SelectListItem>
                                                   {
                                                         new SelectListItem() {Text = "Long Term", Value="1"},
                                                         new SelectListItem() {Text = "Short Term", Value="0"},
                                                   }, new { @class = "form-control" })
                                            <br />
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            <i class="required"></i>
                                            Dosage
                                        </label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(m => m.prescription.dosage, new { @class = "form-control", required = "required" })
                                            <br />
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            <i class="required"></i>
                                            Instruction
                                        </label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(m => m.prescription.instruction, new { @class = "form-control", required = "required" })

                                            <br />
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            <i class="required"></i>

                                            Number of times per day
                                        </label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(m => m.prescription.frequencyPerDay, new { @class = "form-control", required = "required" })
                                            <br />
                                        </div>

                                    </div>
                                </td>
                            </tr>

                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            <i class="required"></i>
                                            Start Date
                                        </label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(m => m.prescription.startDate, "dd/mm/yyyy", new { @class = "form-control date-picker", @data_date_format = "dd/mm/yyyy", required = "required", id = "datetimepicker1" })
                                            <span style="display: none; color:red;" id="startDateError"></span>
                                            <span style="display: none; color:red;" id="startDateError1"></span>
                                            <br />
                                        </div>
                                    </div>
                                </td>

                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            <i class="required"></i>
                                            End Date
                                        </label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(m => m.prescription.endDate, "dd/mm/yyyy", new { @class = "form-control date-picker", @data_date_format = "dd/mm/yyyy", required = "required", id = "datetimepicker2" })
                                            <span style="display: none; color:red;" id="endDateError"></span>
                                            <br />
                                        </div>
                                    </div>
                                </td>

                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">Start Time</label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(m => m.prescription.timeStart, new { @class = "form-control", @id = "startTime" })
                                            <small>If not specified, default time: before meal (09:00) after meal (15:00) </small>
                                            <br /> <br />

                                        </div>
                                    </div>
                                </td>

                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            Notes (if any)
                                        </label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(m => m.prescription.notes, new { @class = "form-control" })
                                            <br />
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="modal-footer">
                    <div class="text-center">
                        <button type="submit" class="btn btn-primary space" id="add">Add</button>
                        <button type="button" class="btn btn-default space" data-dismiss="modal">Close</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@*Modal for Create Medication*@
<div id="CreateModal1" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            @using (Html.BeginForm("AddMedicationLog", "Supervisor", FormMethod.Post, new { @role = "form", @id = "form1" }))
            {
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title" id="modal-title">Create Medication Log</h4>
                </div>
                <div class="modal-body" id="table-body">
                    @Html.HiddenFor(m => m.patient.patientID, new { @Value = @Model.patient.patientID, @id = "ab" })
                    <table>
                        <thead>
                        </thead>
                        <tbody class="table">
                            <tr>
                                <td>


                                    <div class="form-group">
                                        <label class="col-md-10 control-label">Prescription:</label>
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(m => m.medication.prescriptionID, new SelectList(Model.patientPrescriptions, "prescription.prescriptionID", "PrescriptionName"), new { @class = "form-control", required = "required" })
                                            <br />
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            Administered by:
                                        </label>
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(m => m.medication.userID, new SelectList(Model.userList, "userID", "userFullname"), new { @class = "form-control", required = "required" })
                                            <br />
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            Allocated Date:
                                        </label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(m => m.medication.dateForMedication, "dd/mm/yyyy", new { @class = "form-control date-picker", @data_date_format = "dd/mm/yyyy", required = "required", id = "datetimepicker3" })
                                            <br />
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            Allocated Time:
                                        </label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(m => m.medication.timeForMedication, new { @class = "form-control", @id = "timeForMed" })

                                            <br />
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            Date Taken:
                                        </label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(m => m.medication.dateTaken, "dd/mm/yyyy", new { @class = "form-control date-picker", @data_date_format = "dd/mm/yyyy", required = "required", id = "datetimepicker4" })
                                            <br />
                                        </div>

                                    </div>
                                </td>
                            </tr>

                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            Time Taken:
                                        </label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(m => m.medication.timeTaken, new { @class = "form-control", @id = "timeTaken" })
                                            <br />
                                        </div>
                                    </div>
                                </td>

                            </tr>

                        </tbody>
                    </table>
                </div>
                <div class="modal-footer">
                    <div class="text-center">
                        <button type="submit" class="btn btn-primary space submitMed" id="add">Add</button>
                        <button type="button" class="btn btn-default space" data-dismiss="modal">Close</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>


<div id="EditModal1" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            @using (Html.BeginForm("EditMedicationLog", "Supervisor", FormMethod.Post, new { @role = "form", @id = "form1" }))
            {
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title" id="modal-title">Patient's Medication Log</h4>
                </div>
                <div class="modal-body" id="table-body">
                    @Html.HiddenFor(m => m.patient.patientID, new { @Value = @Model.patient.patientID, @id = "ab" })
                    <div id="hidden1"></div>
                    <table>
                        <thead></thead>
                        <tbody class="table">
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">Prescription:</label>
                                        <div class="col-md-10">
                                            @*@Html.DropDownListFor(m => m.medication.prescriptionID, new SelectList(Model.patientPrescriptions, "prescription.prescriptionID", "PrescriptionName"), new { @class = "form-control", required = "required", id = "prescpID", @readonly = "readonly" })*@
                                            @Html.TextBoxFor(m => m.medication.prescriptionID, new { @class = "form-control", id = "prescpID", @readonly = "readonly" })

                                            <br />
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            Allocated Date:
                                        </label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(m => m.medication.dateForMedication, "dd/mm/yyyy", new { @class = "form-control", @data_date_format = "dd/mm/yyyy", required = "required", id = "datetimepicker5", @readonly = "readonly" })
                                            @*<span id="datetimepicker5"></span>*@
                                            <br />
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            Allocated Time:
                                        </label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(m => m.medication.timeForMedication, new { @class = "form-control", @id = "timeForMed1", @readonly = "readonly" })
                                            @*<span id="timeForMed1"></span>*@
                                            <br />
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            Administered by:
                                        </label>
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(m => m.medication.userID, new SelectList(Model.userList, "userID", "userFullname"), new { @class = "form-control", required = "required", id = "userID" })
                                            <br />
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            <i class="required"></i>
                                            Date Taken:
                                        </label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(m => m.medication.dateTaken, "dd/mm/yyyy", new { @class = "form-control date-picker", @data_date_format = "dd/mm/yyyy", required = "required", id = "datetimepicker6" })
                                            <br />
                                        </div>

                                    </div>
                                </td>
                            </tr>

                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            <i class="required"></i>
                                            Time Taken:
                                        </label>
                                        <div class="col-md-10">
                                            @*@Html.TextBoxFor(m => m.medication.timeTaken, new { @class = "form-control", @id = "timeTaken1" })*@
                                            <span id="timeTaken1"></span>

                                            <br />
                                        </div>
                                    </div>
                                </td>

                            </tr>

                        </tbody>
                    </table>

                </div>

                <div class="modal-footer">
                    <div class="text-center">
                        <button type="submit" class="btn btn-primary space">Save Changes</button>
                        <button type="button" class="btn btn-default space" data-dismiss="modal">Close</button>
                    </div>
                </div>
            }
        </div>

    </div>

</div>

<div id="EditModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            @using (Html.BeginForm("EditPrescription", "Supervisor", FormMethod.Post, new { @role = "form", @id = "form1" }))
            {
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>

                    <h4 class="modal-title" id="modal-title">Edit Patient's Prescription</h4>

                </div>

                <div class="modal-body" id="table-body">

                    @Html.HiddenFor(m => m.patient.patientID, new { @Value = @Model.patient.patientID, @id = "ab" })
                    <div id="hidden"></div>
                    <table>
                        <thead>
                        </thead>
                        <tbody class="table">
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">To be taken</label>

                                        <div class="col-md-10">
                                            @Html.DropDownListFor(x => x.mealID, new List<SelectListItem>
                                               {
                                                     new SelectListItem() {Text = "After Meal", Value="1"},
                                                     new SelectListItem() {Text = "Before Meal", Value="0"},
                                                     //new SelectListItem() {Text = "Before/After Meal", Value="2"},


                                               }, new { @class = "form-control", id="meal" })

                                            <br />
                                        </div>
                                    </div>
                                </td>

                            </tr>

                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            Drug Name

                                        </label>
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(m => m.prescription.drugNameID, new SelectList(Model.drugList, "list_prescriptionID", "value"), new { @class = "form-control", id = "drugName" })
                                            <br />
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group" id="drugNameOther1" style='display:none;'>
                                        <label class="col-md-10 control-label">
                                            <i class="required"></i>
                                            Please specify
                                        </label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(m => m.inputDrugName, new { @class = "form-control", id = "otherDrugVal" })
                                            <br />

                                        </div>
                                    </div>

                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            Period
                                        </label>
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(m => m.prescription.isChronic,new List<SelectListItem>
                                                   {
                                                         new SelectListItem() {Text = "Long Term", Value="1"},
                                                         new SelectListItem() {Text = "Short Term", Value="0"},
                                                   }, new { @class = "form-control", id="period" })
                                            <br />
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            Dosage
                                            @*<a class="fa fa-info-circle" data-toggle="dsg" title="(mg/mL)"></a>*@
                                        </label>
                                        <div class="col-md-10">
                                            @*<div id="dosage"></div>*@
                                            @Html.TextBoxFor(m => m.prescription.dosage, new { @class = "form-control", required = "required", id = "dosage" })

                                            <br />
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            <i class="required"></i>
                                            Instruction
                                        </label>
                                        <div class="col-md-10">
                                            @*<div id="ins"></div>*@
                                            @Html.TextBoxFor(m => m.prescription.instruction, new { @class = "form-control", required = "required", id = "ins" })

                                            <br />
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            <i class="required"></i>

                                            Number of times per day

                                        </label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(m => m.prescription.frequencyPerDay, new { @class = "form-control", required = "required", id = "frequency" })
                                            @*<div id="frequency"></div>*@
                                            <br />
                                        </div>
                                    </div>
                                </td>

                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            <i class="required"></i>

                                            Start Date
                                        </label>
                                        <div class="col-md-10">
                                            <div id="stDate"></div>
                                            <span style="display: none; color:red;" id="startDateError2"></span>
                                            <span style="display: none; color:red;" id="startDateError3"></span>
                                            <br />
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            <i class="required"></i>

                                            End Date
                                        </label>
                                        <div class="col-md-10">
                                            <div id="endDate"></div>
                                            <span style="display: none; color:red;" id="endDateError1"></span>

                                            <br />
                                        </div>
                                    </div>
                                </td>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">Start Time</label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(m => m.prescription.timeStart, new { @class = "form-control", @id = "startTime1" })
                                            <small>If not specified, default time: before meal (09:00) after meal (15:00) </small>
                                            <br /> <br />
                                            @*<div id="startDate"></div>*@

                                        </div>
                                    </div>
                                </td>

                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">Notes (if any)</label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(m => m.prescription.notes, new { @class = "form-control", id = "notes" })
                                            @*<div id="notes"></div>*@

                                            <br />
                                        </div>
                                    </div>
                                </td>

                            </tr>

                        </tbody>
                    </table>

                </div>

                <div class="modal-footer">
                    <div class="text-center">
                        <button type="submit" class="btn btn-primary space">Save Changes</button>
                        <button type="button" class="btn btn-default space" data-dismiss="modal">Close</button>
                    </div>
                </div>
            }
        </div>

    </div>

</div>




<script src="~/Content/global/plugins/jquery.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/js.cookie.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/jquery-slimscroll/jquery.slimscroll.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/jquery.blockui.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/bootstrap-switch/js/bootstrap-switch.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/bootstrap-fileinput/bootstrap-fileinput.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/jquery.sparkline.min.js" type="text/javascript"></script>
<script src="~/Content/global/scripts/app.min.js" type="text/javascript"></script>

@*DataTable*@
<link href="~/Content/global/plugins/datatables/datatables.min.css" rel="stylesheet" type="text/css" />
<link href="~/Content/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.css" rel="stylesheet" type="text/css" />
<script src="~/Content/global/plugins/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
<script src="~/Content/global/scripts/datatable.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/datatables/datatables.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.js" type="text/javascript"></script>
<link href="~/Content/global/plugins/bootstrap/css/custom.css" rel="stylesheet" type="text/css">

<script src="~/Content/pages/scripts/table-datatables-responsive.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/datatables/date-uk.js" type="text/javascript"></script>

@*Timepicker*@
<link rel="stylesheet" href="~/Content/global/css/jquery.timepicker.css" type="text/css" />
<script src="~/Content/global/scripts/jquery.timepicker.js" type="text/javascript"></script>


<link href="~/Content/global/plugins/jquery-ui/jquery-ui.min.css" rel="stylesheet" type="text/css" />
<script src="~/Content/global/plugins/jquery-ui/jquery-ui.min.js" type="text/javascript"></script>

<script src="~/Content/global/plugins/bootstrap-datepicker/js/bootstrap-datepicker.min.js" type="text/javascript"></script>
<link rel="stylesheet" href="~/Content/global/plugins/bootstrap-datepicker/css/bootstrap-datepicker.min.css" type="text/css" />
@*<script src="~/Content/global/scripts/wickedpicker.js" type="text/javascript"></script>
    <link href="~/Content/global/css/wickedpicker.min.css" rel="stylesheet" type="text/css">*@

@*<link rel="stylesheet" href="~/Content/global/css/jquery.timepicker.css" type="text/css" />
    <script src="~/Content/global/scripts/jquery.timepicker.js" type="text/javascript"></script>*@

@*Input Checks*@
<script src="~/Content/global/scripts/inputChecks.js" type="text/javascript"></script>


<script>
    $(document).ready(function () {
        prescriptionCheck();
        $('#sample_3').DataTable().destroy();
        $('#sample_3').DataTable({
            columnDefs: [
                { type: 'date-uk', targets: 4 },
                { type: 'date-uk', targets: 3 }

            ],
            "order": [[4, "desc"], [0, "asc"]]
        });


        $('#sample_4').DataTable().destroy();
        $('#sample_4').DataTable({
            columnDefs: [
                { type: 'date-uk', targets: 4 },
                { type: 'date-uk', targets: 3 }

            ],
            "order": [[4, "desc"], [0, "asc"]]
        });

        $('#sample_5').DataTable().destroy();
        $('#sample_5').DataTable({
            columnDefs: [
                { type: 'date-uk', targets: 1 },
                { type: 'date-uk', targets: 3 }

            ],
            "order": [[1, "desc"], [0, "asc"]]
        });



        //create prescription
        $('#datetimepicker1').datepicker({
            defaultDate: null,
        });

        //edit prescription
        $('#datetimepicker2').datepicker({
            defaultDate: null,
        });


        $('#datetimepicker1').change(function () {

            var datetime1 = $('#datetimepicker1').val();
            var datetime2 = $('#datetimepicker2').val();

            dateCheckPscp(datetime1, datetime2, 'c');
        });

        $('#datetimepicker2').change(function () {

            var datetime1 = $('#datetimepicker1').val();
            var datetime2 = $('#datetimepicker2').val();

            dateCheckPscp(datetime1, datetime2, 'c');
        });



        //create - medication
        $('#create1').click(function () {
            $("#CreateModal1").modal('show');

            var datetime1 = $('#datetimepicker1').val();
            var datetime2 = $('#datetimepicker2').val();

            dateCheckPscp(datetime1, datetime2, 'c');
        });

        //create medication
        //date for Med
        $('#datetimepicker3').datepicker({
            defaultDate: null,
        });

        //date taken
        $('#datetimepicker4').datepicker({
            defaultDate: null,
        });

        //time for med
        //$('#timeForMed').wickedpicker({ twentyFour: true, timeSeparator: ':'});

        // time taken
        //$('#timeTaken').wickedpicker({ twentyFour: true, timeSeparator: ':' });


        //create - prescription
        $('#create').click(function () {
            $("#CreateModal").modal('show');

            $('#startTime').timepicker({
                'timeFormat': 'H:i:s',
                'minTime': '09:00:00',
                'maxTime': '16:30:00',
                'showDuration': false,
            });

        });

        //edit
        //date for med
        //$('#datetimepicker5').datepicker({
        //    defaultDate: null,
        //});

        //date
        $('#datetimepicker6').datepicker({
            defaultDate: null,
        });



        //edit - prescription
        $(document).delegate('.btn.btn-primary.space.edit', 'click', function () {
            $("#EditModal").modal('show');
            $('#startTime1').timepicker({
                'timeFormat': 'H:i:s',
                'minTime': '09:00:00',
                'maxTime': '16:30:00',
                'showDuration': false,
            });

            $.ajax({
                type: 'POST',
                dataType: 'json',
                data: {
                    id: $(this).attr('id'),
                },
                url: '@Url.Action("GetPrescription", "Supervisor")',
                success: function (result) {
                    //$("#dosage").empty();
                    //$("#ins").empty();
                    //$("#frequency").empty();
                    $("#stDate").empty();
                    $("#endDate").empty();
                    //$("#notes").empty();

                    $("#hidden").empty();
                    console.log(result.prescription.prescriptionID);
                    $("#hidden").append("<input type='hidden' name='prescriptionID' value='" + result.prescription.prescriptionID+"'/>");

                    var startdatetime = new Date(parseInt(result.prescription.startDate.substr(6)));
                    var dd = startdatetime.getDate();
                    var mm = startdatetime.getMonth() + 1; //January is 0!

                    var yyyy = startdatetime.getFullYear();
                    if (dd < 10) {
                        dd = '0' + dd;
                    }
                    if (mm < 10) {
                        mm = '0' + mm;
                    }
                    var startDate = dd + '/' + mm + '/' + yyyy;



                    $("#stDate").append("<input type='text' class='form-control date-picker' id='datepicker1' data-date-format='dd/mm/yyyy'  name='startDate' value='" + startDate + "'/>");

                    $('#datepicker1').datepicker({
                        defaultDate: null,
                    });

                    var enddatetime = new Date(parseInt(result.prescription.endDate.substr(6)));

                    var dd = enddatetime.getDate();
                    var mm = enddatetime.getMonth() + 1; //January is 0!

                    var yyyy = enddatetime.getFullYear();
                    if (dd < 10) {
                        dd = '0' + dd;
                    }
                    if (mm < 10) {
                        mm = '0' + mm;
                    }
                    var endDate = dd + '/' + mm + '/' + yyyy;


                    $("#endDate").append("<input type='text' class='form-control date-picker' id='datepicker2' data-date-format='dd/mm/yyyy'  name='endDate' value='" + endDate + "'/>");

                    $('#datepicker2').datepicker({
                        defaultDate: null,
                    });


                    $("#dosage").val(result.prescription.dosage);
                    $("#ins").val(result.prescription.instruction);
                    $("#notes").val(result.prescription.notes);
                    $("#frequency").val(result.prescription.frequencyPerDay);

                    if (result.prescriptionCheck.isChecked == 1) {
                        $("#drugName").val(result.prescription.drugNameID);

                        var element = document.getElementById('drugNameOther1');
                        element.style.display = 'none';

                    } else {
                        $("#drugName").val(-1);

                        var element = document.getElementById('drugNameOther1');
                        element.style.display = 'block';

                        $("#otherDrugVal").val(result.prescriptionCheck.value)


                    }

                    if (result.prescription.beforeMeal == 0 && result.prescription.afterMeal == 1) {
                        $("#meal").val(1);

                    } else if (result.prescription.beforeMeal == 1 && result.prescription.afterMeal == 0) {
                        $("#meal").val(0);

                    }
                    //else if (result.prescription.beforeMeal == 1 && result.prescription.afterMeal == 1) {
                    //    $("#meal").val(2);

                    //}


                    if (result.prescription.isChronic == 0) {
                        $("#period").val(0);
                    } else if (result.prescription.isChronic == 1) {
                        $("#period").val(1);

                    }

                    //Time For Med
                    var hours = result.prescription.timeStart.Hours;
                    if (hours < 10) {
                        hours = '0' + hours;
                    }

                    var min = result.prescription.timeStart.Minutes;

                    if (min < 10) {
                        min = '0' + min;
                    }

                    var startTimeForPscp = hours + ":" + min;


                    //$("#timeForMed1").val(timeMed);
                    $('#startTime1').val(startTimeForPscp);

                    $('#datepicker1').change(function () {

                        var datetime1 = $('#datepicker1').val();
                        var datetime2 = $('#datepicker2').val();

                        dateCheckPscp(datetime1, datetime2, 'e');
                    });

                    $('#datepicker2').change(function () {

                        var datetime1 = $('#datepicker1').val();
                        var datetime2 = $('#datepicker2').val();

                        dateCheckPscp(datetime1, datetime2 ,'e');
                    });



                }
            });

        });

         $(document).delegate('.editMed', 'click', function () {
            $("#EditModal1").modal('show');

            $.ajax({
                type: 'POST',
                dataType: 'json',
                data: {
                    id: $(this).attr('id'),
                },
                url: '@Url.Action("GetMedication", "Supervisor")',
                success: function (result) {
                    console.log(result);

                    $("#hidden1").empty();
                    $("#timeForMed1").empty();
                    $("#timeTaken1").empty();
                    $("#datetimepicker5").empty();
                    $("#datetimepicker6").val("");

                    $("#hidden1").append("<input type='hidden' name='medicationLogID' value='" + result.med.medicationLogID+"'/>");

                    $("#prescpID").val(result.PrescriptionName);

                    if (result.med.User != null) {
                    $("#userID").val(result.med.User.userID);
                    }

                    //Time For Med
                    var hours = result.med.timeForMedication.Hours;
                    if (hours < 10) {
                        hours = '0' + hours;
                    }

                    var min = result.med.timeForMedication.Minutes;

                    if (min < 10) {
                        min = '0' + min;
                    }

                    var timeMed = hours + ":" + min;


                    $("#timeForMed1").val(timeMed);


                    $("#timeTaken1").replaceWith("<input type='text' class='timepicker form-control' id='timeTaken1' name='timeTaken1' placeholder='09:00'/>");

                    //Time Taken
                    if (result.med.timeTaken != null) {
                        var hours = result.med.timeTaken.Hours;
                        if (hours < 10) {
                            hours = '0' + hours;
                        }

                        var min = result.med.timeTaken.Minutes;

                        if (min < 10) {
                            min = '0' + min;
                        }


                        //$("#timeTaken1").wickedpicker({ twentyFour: true, timeSeparator: ':', now: hours + ":" + min });
                        $("#timeTaken1").val(hours + ":" + min);
                    } else {
                        //$("#timeTaken1").wickedpicker();

                    }


                    //Date For Med
                    var dateForMed = new Date(parseInt(result.med.dateForMedication.substr(6)));
                    var dd = dateForMed.getDate();
                    var mm = dateForMed.getMonth() + 1; //January is 0!

                    var yyyy = dateForMed.getFullYear();
                    if (dd < 10) {
                        dd = '0' + dd;
                    }
                    if (mm < 10) {
                        mm = '0' + mm;
                    }
                    var medDate = dd + '/' + mm + '/' + yyyy;

                    $("#datetimepicker5").val(medDate);


                    if (result.med.dateTaken != null) {
                    var dateTaken = new Date(parseInt(result.med.dateTaken.substr(6)));
                    var dd = dateTaken.getDate();
                    var mm = dateTaken.getMonth() + 1; //January is 0!

                    var yyyy = dateTaken.getFullYear();
                    if (dd < 10) {
                        dd = '0' + dd;
                    }
                    if (mm < 10) {
                        mm = '0' + mm;
                    }
                    var takenDate = dd + '/' + mm + '/' + yyyy;
                    $("#datetimepicker6").val(takenDate);
                    }

                }
            });

        });




        function dateCheckPscp(datetime1, datetime2, type) {
            var datetimepicker1Val = datetime1;
            var datetimepicker2Val = datetime2;
            var type = type;

            console.log(datetime1);
            //var datetimepicker1Val = $("#datetimepicker1").val();
            //var datetimepicker2Val = $("#datetimepicker2").val();

            var datetime = new Date();
            var dd = datetime.getDate();
            var mm = datetime.getMonth() + 1; //January is 0!

            var yyyy = datetime.getFullYear();
            if (dd < 10) {
                dd = '0' + dd;
            }
            if (mm < 10) {
                mm = '0' + mm;
            }
            var d = dd + '/' + mm + '/' + yyyy;


            var arrStartDate = datetimepicker1Val.split("/");
            var stdate = new Date(arrStartDate[2], arrStartDate[1], arrStartDate[0]);

            var arrEndDate = datetimepicker2Val.split("/");
            var enddate = new Date(arrEndDate[2], arrEndDate[1], arrEndDate[0]);


            var arrCrDate = d.split("/");
            var tdate = new Date(arrCrDate[2], arrCrDate[1], arrCrDate[0]);

            if (type == "c") {
                if (stdate < tdate) {
                    document.getElementById("startDateError").innerHTML = "Start date cannot be before today.";
                    document.getElementById("startDateError").style.display = "block";
                    return false;

                } else {
                    document.getElementById("startDateError").innerHTML = "";
                    document.getElementById("startDateError").style.display = "none";
                }

                if (stdate > enddate && enddate != "") {
                    document.getElementById("startDateError1").innerHTML = "Start date cannot be after end date.";
                    document.getElementById("startDateError1").style.display = "block";
                    return false;

                } else {
                    document.getElementById("startDateError1").innerHTML = "";
                    document.getElementById("startDateError1").style.display = "none";
                }


                if (enddate < tdate && stdate != "") {
                    document.getElementById("endDateError").innerHTML = "End date cannot be before today.";
                    document.getElementById("endDateError").style.display = "block";
                    return false;

                } else {
                    document.getElementById("endDateError").innerHTML = "";
                    document.getElementById("endDateError").style.display = "none";
                }

            } else if (type == "e") {
                if (stdate < tdate) {
                    document.getElementById("startDateError2").innerHTML = "Start date cannot be before today.";
                    document.getElementById("startDateError2").style.display = "block";
                    return false;

                } else {
                    document.getElementById("startDateError2").innerHTML = "";
                    document.getElementById("startDateError2").style.display = "none";
                }

                if (stdate > enddate && enddate != "") {
                    document.getElementById("startDateError3").innerHTML = "Start date cannot be after end date.";
                    document.getElementById("startDateError3").style.display = "block";
                    return false;

                } else {
                    document.getElementById("startDateError3").innerHTML = "";
                    document.getElementById("startDateError3").style.display = "none";
                }


                if (enddate < tdate && stdate != "") {
                    document.getElementById("endDateError1").innerHTML = "End date cannot be before today.";
                    document.getElementById("endDateError1").style.display = "block";
                    return false;

                } else {
                    document.getElementById("endDateError1").innerHTML = "";
                    document.getElementById("endDateError1").style.display = "none";
                }

            }
        }

        });



    //function dateCheckMed(datetime1, datetime2, type) {
    //    var datetimepicker1Val = datetime1;
    //    var datetimepicker2Val = datetime2;
    //    var type = type;

    //    console.log(datetime1);
    //    //var datetimepicker1Val = $("#datetimepicker1").val();
    //    //var datetimepicker2Val = $("#datetimepicker2").val();

    //    var datetime = new Date();
    //    var dd = datetime.getDate();
    //    var mm = datetime.getMonth() + 1; //January is 0!

    //    var yyyy = datetime.getFullYear();
    //    if (dd < 10) {
    //        dd = '0' + dd;
    //    }
    //    if (mm < 10) {
    //        mm = '0' + mm;
    //    }
    //    var d = dd + '/' + mm + '/' + yyyy;


    //    var arrStartDate = datetimepicker1Val.split("/");
    //    var stdate = new Date(arrStartDate[2], arrStartDate[1], arrStartDate[0]);

    //    var arrEndDate = datetimepicker2Val.split("/");
    //    var enddate = new Date(arrEndDate[2], arrEndDate[1], arrEndDate[0]);


    //    var arrCrDate = d.split("/");
    //    var tdate = new Date(arrCrDate[2], arrCrDate[1], arrCrDate[0]);

    //    if (type == "c") {
    //        if (stdate < tdate) {
    //            document.getElementById("startDateError").innerHTML = "Start date cannot be before today.";
    //            document.getElementById("startDateError").style.display = "block";
    //            return false;

    //        } else {
    //            document.getElementById("startDateError").innerHTML = "";
    //            document.getElementById("startDateError").style.display = "none";
    //        }

    //        if (stdate > enddate && enddate != "") {
    //            document.getElementById("startDateError1").innerHTML = "Start date cannot be after end date.";
    //            document.getElementById("startDateError1").style.display = "block";
    //            return false;

    //        } else {
    //            document.getElementById("startDateError1").innerHTML = "";
    //            document.getElementById("startDateError1").style.display = "none";
    //        }


    //        if (enddate < tdate && stdate != "") {
    //            document.getElementById("endDateError").innerHTML = "End date cannot be before today.";
    //            document.getElementById("endDateError").style.display = "block";
    //            return false;

    //        } else {
    //            document.getElementById("endDateError").innerHTML = "";
    //            document.getElementById("endDateError").style.display = "none";
    //        }

    //    }

</script>

