@model NTU_FYP_REBUILD_17.ViewModels.AllocationViewModel
@using NTU_FYP_REBUILD_17.Models
@{
    Layout = "~/Views/Shared/_LayoutSupervisor.cshtml";
}


<div class="portlet light ">
    <div class="portlet-title tabbable-line">
        <div class="caption caption-md">
            <i class="icon-globe theme-font hide"></i>
            @Html.Raw("<span class='caption-subject font-blue-madison bold uppercase'>" + @Model.patient.firstName + " " + @Model.patient.lastName + "'s Assigned Staff</span>")

        </div>
        </div>
        <div class="portlet-body">
            <div class="tab-content">
                <div class="tab-pane active">
                    @if (TempData["success"] != null)
                    {
                        <div class="alert alert-success text-center" role="alert">@TempData["success"]</div>
                    }

                    @if (TempData["error"] != null)
                    {
                        <div class="alert alert-danger  text-center" role="alert">@Html.Raw(TempData["error"])</div>
                    }
                    @*@Html.HiddenFor(p => p.id, new { @Value = @Model.CentreActivities.centreActivityID, @id = "ab" });*@


                    <table class="table">

                        <tr><td><u><b>Asigned Staff</b></u></td></tr>

                        <tr>

                            @*<td>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <b><u>Assigned Staff</u></b><br />
                                        <b>Supervisor: </b>@Model.assignedSupervisor.userFullname<br />
                                        <b>Game Therapist: </b>@Model.assignedGametherapist.userFullname<br />
                                        <b>Doctor: </b>@Model.assignedDoctor.userFullname
                                        <br />
                                        <b>Caregiver: </b>@Model.assignedCaregiver.userFullname <br />
                                        <br />
                                        <div>
                                            <button id="@Model.patient.patientID" class="btn btn-primary space edit" type="submit">Edit</button>
                                            <a href="" class="btn btn red space" disabled="disabled" onclick="return false;" >
                                            Delete
                                            </a>
                                        </div>
                                        <br />

                                    </div>

                                        <div class="col-lg-4">
                                            <b><u>Temporary Allocated Staff</u></b><br />*@
                            @*@if (Model.tempSupervisorInfo != null)
                                {
                                    <b>Supervisor: </b>@Model.tempSupervisorInfo.userFullname<br />
                                }
                                else
                                {
                                    <b>Supervisor: </b><span>nil</span><br />

                                }
                                @if (Model.tempGametherapistInfo != null)
                                {
                                    <b>Game Therapist: </b>@Model.tempGametherapistInfo.userFullname<br />
                                }
                                else
                                {
                                    <b>Game Therapist: </b><span>nil</span><br />

                                }*@
                            @*@if (Model.tempDoctorInfo != null)
                                                                        {
                                                                            <b>Doctor: </b>@Model.tempDoctorInfo.userFullname<br />
                                                                        }
                                                                        else
                                                                        {
                                                                            <b>Doctor: </b><span>nil</span><br />

                                                                        }

                                                                        @if (Model.tempCaregiverInfo != null)
                                                                        {
                                                                            <b>Caregiver: </b>@Model.tempCaregiverInfo.userFullname<br />
                                                                        }
                                                                        else
                                                                        {
                                                                            <b> Caregiver: </b><span>nil</span><br />


                                                                        }
                                                                        <br/>
                                                                        <div>
                                                                            <button id="@Model.patient.patientID" class="btn btn-primary space editTemp" type="submit">Edit</button>
                                                                            <a class="btn btn red space delete">Delete</a>
                                                                        </div>

                                                                    </div>
                                                                </div>
                                                                <br />
                                </td>*@

                            <td style="opacity:0.6">Supervisor</td>
                            <td style="opacity:0.6">Game Therapist</td>
                            <td>Doctor</td>
                            <td>Caregiver</td>

                        </tr>
                        <tr>
                            <td style="opacity:0.6">@Model.assignedSupervisor.userFullname</td>
                            <td style="opacity:0.6">@Model.assignedGametherapist.userFullname</td>
                            <td>@Model.assignedDoctor.userFullname</td>
                            <td> @Model.assignedCaregiver.userFullname</td>
                            <td>
                                <button id="@Model.patient.patientID" class="btn btn-primary space edit" type="submit">Edit</button>

                                <br />
                            </td>
                        </tr>


                        <tr><td><u><b>Temporary Allocated Staff</b></u></td></tr>
                        <tr>
                            <td style="opacity:0.6">Supervisor</td>
                            <td style="opacity:0.6">Game Therapist</td>
                            <td>Doctor</td>
                            <td>Caregiver</td>
                        </tr>

                        <tr>
                            @if (Model.tempSupervisorInfo != null)
                            {
                                <td style="opacity:0.6">@Model.tempSupervisorInfo.userFullname</td>
                            }
                            else
                            {
                                <td style="opacity:0.6">nil</td>

                            }
                            @if (Model.tempGametherapistInfo != null)
                            {
                                <td style="opacity:0.6">@Model.tempGametherapistInfo.userFullname</td>
                            }
                            else
                            {
                                <td style="opacity:0.6">nil</td>
                            }
                            @if (Model.tempDoctorInfo != null)
                            {
                                <td>@Model.tempDoctorInfo.userFullname</td>
                            }
                            else
                            {
                                <td>nil</td>

                            }

                            @if (Model.tempCaregiverInfo != null)
                            {
                                <td>@Model.tempCaregiverInfo.userFullname</td>
                            }
                            else
                            {
                                <td>nil</td>
                            }

                            @if(Model.tempCaregiverInfo != null || Model.tempDoctorInfo != null) { 
                                <td>
                                    <button id="@Model.patient.patientID" class="btn btn-primary space editTemp" type="submit">Edit</button>
                                    <a id="@Model.patient.patientID" class="btn btn red space delete">Delete</a>

                                </td>
                            }
                          
                        </tr>
                        
                        @*<tr>
                                <td>
                                    <b><u>Modify Assigned Staff</u></b>

                                    <div class="row">
                                        <div class="col-lg-3">
                                            <b>Doctor: </b>@Model.assignedDoctor.userFullname
                                        </div>
                                        <div class="col-lg-5">
                                            <button id="@Model.patient.patientID" class="btn btn-primary space edit" type="submit">Edit</button>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-lg-3">
                                            <b>Caregiver: </b>@Model.assignedCaregiver.userFullname
                                        </div>
                                        <div class="col-lg-5">
                                            <button id="@Model.patient.patientID" class="btn btn-primary space edit" type="submit">Edit</button>
                                        </div>
                                    </div>
                                </td>

                            </tr>*@
                        @*<tr>
                                <td>
                                    <b><u>List of Temporary Supervisors</u></b><br />
                                    @if (Model.tempSupervisorList != null)
                                    {
                                        foreach (var item in Model.tempSupervisorList)
                                        {
                                            <b>Name:</b><span>item.userFullname</span><br />


                                        }
                                    }
                                    <br /> <br />
                                </td>
                            </tr>

                            <tr>
                                <td>
                                    <b><u>List of Temporary Game Therapists</u></b><br />
                                    @if (Model.tempGametherapistList != null)
                                    {
                                        foreach (var item in Model.tempGametherapistList)
                                        {
                                            <b>Name:</b><span>item.userFullname</span><br />
                                        }
                                    }
                                </td>
                            </tr>*@


                    </table>

                    <div class="margiv-top-10 margin-bottom-10 pull-right">
                        <button id="create" class="btn btn-primary space" type="submit">Create</button>

                        <input class="btn grey" type="button" onclick="window.location.replace('@Url.Action("ManagePatient", "Supervisor")')" value="Cancel" />
                    </div>
                    <br /><br />


                </div>
            </div>
        </div>
    </div>

@*Modal for Create*@
<div id="CreateModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            @using (Html.BeginForm("AddAllocation", "Supervisor", FormMethod.Post, new { @role = "form", @id = "form1" }))
            {
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>

                    <h4 class="modal-title" id="modal-title">Create Temporary Allocation</h4>

                </div>

                <div class="modal-body" id="table-body">

                    @Html.HiddenFor(m => m.patient.patientID, new { @Value = @Model.patient.patientID, @id = "ab" })

                    <table>
                        <thead>
                        </thead>
                        <tbody class="table">
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">Allocation</label>
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(m => m.usertypeID,  new List<SelectListItem>
                                       {

                                             new SelectListItem() { Text = "Caregiver", Value = "2" },
                                             new SelectListItem() { Text = "Doctor", Value = "3" },
                                             //new SelectListItem() {Text = "Game Therapist", Value="4"},
                                             //new SelectListItem() {Text = "Supervisor", Value="6"},

                                                 }, new { @class = "form-control", id="typeCheck"})

                                            <br />
                                        </div>
                                    </div>
                                </td>
                            </tr>

                            <tr>
                                <td>


                                    <div class="form-group" id="cg">
                                        @if (Model.tempCaregiverInfo == null)
                                        {
                                            <label class="col-md-10 control-label">Temporary Caregiver</label>
                                            <div class="col-md-10">
                                                @Html.DropDownListFor(m => m.tempCaregiverID, new SelectList(Model.caregiverList, "userID", "userFullname"), new { @class = "form-control",  @id="cgID" })
                                                <br />
                                            </div>
                                        }
                                        else
                                        {
                                            <span style="color: red">Note: Unable to create as there is an existing temporary caregiver</span><br />

                                        }
                                    </div>


                                    <div class="form-group" id="dr" style="display:none">
                                        @if (Model.tempDoctorInfo == null)
                                        {
                                            <label class="col-md-10 control-label">Temporary Doctor</label>
                                            <div class="col-md-10">
                                                @Html.DropDownListFor(m => m.tempDoctorID, new SelectList(Model.doctorList, "userID", "userFullname"), new { @class = "form-control", @id = "drID" })
                                                <br />
                                            </div>
                                        }
                                        else
                                        {
                                            <span style="color: red">Note: Unable to create as there is an existing temporary doctor</span><br />

                                        }
                                    </div>
                                    </td>
                                </tr>
                                    
                        </tbody>
                    </table>

                </div>

                <div class="modal-footer">
                    <div class="text-center">
                        <button type="submit" class="btn btn-primary space" id="add">Add</button>
                        <button type="button" class="btn btn-default space" data-dismiss="modal">Close</button>
                    </div>
                </div>
            }
        </div>

</div>
</div>

<div id="EditModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            @using (Html.BeginForm("EditAllocationDetails", "Supervisor", FormMethod.Post, new { @role = "form", @id = "form1" }))
            {
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>

                <h4 class="modal-title" id="modalTitle"></h4>
                @*<h4 class="modal-title" id="editAllocation">Edit Allocation</h4>*@
            </div>

            <div class="modal-body" id="table-body">

                @Html.HiddenFor(m => m.patient.patientID, new { @Value = @Model.patient.patientID, @id = "ab" })
                <div id="hidden"></div>
                <div id="allocationType"></div>

                <table>
                    <thead>
                    </thead>
                    <tbody class="table">

                        <tr>

                            <td>
                                <div class="form-group">
                                    <label class="col-md-10 control-label">Allocation</label>
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(m => m.usertypeID,  new List<SelectListItem>
                                   {
                                         new SelectListItem() { Text = "Caregiver", Value = "2" },
                                         new SelectListItem() { Text = "Doctor", Value = "3" },

                                             }, new { @class = "form-control", id="typeCheck1"})

                                        <br />
                                    </div>
                                </div>
                            </td>
                            </tr>
                        <tr>
                            <td>


                                <div class="form-group" id="cg1">

                                    <label class="col-md-10 control-label" id="cclass1l">Caregiver</label>
                                    <div class="col-md-10" id="cclass1">
                                        @Html.DropDownListFor(m => m.allocatedCaregiver.caregiverID, new SelectList(Model.caregiverList, "userID", "userFullname"), new { @class = "form-control", id = "cgID1" })
                                        <br />
                                    </div>

                                </div>


                                <div class="form-group" id="dr1" style="display:none">

                                    <label class="col-md-10 control-label" id="dclass1l">Doctor</label>
                                    <div class="col-md-10" id="dclass1">
                                        @Html.DropDownListFor(m => m.allocatedDoctor.doctorID, new SelectList(Model.doctorList, "userID", "userFullname"), new { @class = "form-control", id = "drID1" })
                                        <br />
                                    </div>

                                </div>

                                <div id="note3" style="display:none"></div>
                                <div id="note4" style="display:none"></div>

                            </td>
                        </tr>

                            


                    </tbody>
                </table>

            </div>

                <div class="modal-footer">
                    <div class="text-center">
                        <button type="submit" class="btn btn-primary space" id="save">Save Changes</button>
                        <button type="button" class="btn btn-default space" data-dismiss="modal">Close</button>
                    </div>
                </div>
            }
        </div>

    </div>

</div>

<div id="DeleteModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            @using (Html.BeginForm("DeleteAllocationDetails", "Supervisor", FormMethod.Post, new { @role = "form", @id = "form1" }))
            {
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>

                    <h4 class="modal-title" id="modal-title">Delete Temporary Allocation</h4>

                </div>

                <div class="modal-body" id="table-body">

                    @Html.HiddenFor(m => m.patient.patientID, new { @Value = @Model.patient.patientID, @id = "ab" })
                    <div id="hidden"></div>

                    <table>
                        <thead>
                        </thead>
                        <tbody class="table">
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">Allocation</label>
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(m => m.usertypeID,  new List<SelectListItem>
                                       {
                                             new SelectListItem() { Text = "Caregiver", Value = "2" },
                                             new SelectListItem() { Text = "Doctor", Value = "3" },

                                                 }, new { @class = "form-control", id="typeCheck2"})

                                            <br />
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group" id="cg2">

                                        <label class="col-md-10 control-label" id="cclassl">Caregiver</label>
                                        <div class="col-md-10" id="cclass">
                                            @Html.DropDownListFor(m => m.allocatedCaregiver.caregiverID, new SelectList(Model.caregiverList, "userID", "userFullname"), new { @class = "form-control", id = "cgID2", disabled = "disabled" })
                                            <br />
                                        </div>

                                    </div>

                                    <div class="form-group" id="dr2" style="display:none">

                                        <label class="col-md-10 control-label" id="dclassl">Doctor</label>
                                        <div class="col-md-10" id="dclass">
                                            @Html.DropDownListFor(m => m.allocatedDoctor.doctorID, new SelectList(Model.doctorList, "userID", "userFullname"), new { @class = "form-control", id = "drID2", disabled = "disabled" })
                                            <br />
                                        </div>

                                    </div>
                                    <div id="note1" style="display:none"></div>
                                    <div id="note2" style="display:none"></div>

                                </td>

                            </tr>



                        </tbody>
                    </table>

                </div>

                <div class="modal-footer">
                    <div class="text-center">
                        <button type="submit" class="btn btn red space" id="deleteBtn">Delete</button>
                        <button type="button" class="btn btn-default space" data-dismiss="modal">Close</button>
                    </div>
                </div>
            }
        </div>

    </div>

</div>




<script src="~/Content/global/plugins/jquery.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/js.cookie.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/jquery-slimscroll/jquery.slimscroll.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/jquery.blockui.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/bootstrap-switch/js/bootstrap-switch.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/bootstrap-fileinput/bootstrap-fileinput.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/jquery.sparkline.min.js" type="text/javascript"></script>
<script src="~/Content/global/scripts/app.min.js" type="text/javascript"></script>



<link href="~/Content/global/plugins/jquery-ui/jquery-ui.min.css" rel="stylesheet" type="text/css" />
<script src="~/Content/global/plugins/jquery-ui/jquery-ui.min.js" type="text/javascript"></script>

<script src="~/Content/global/plugins/bootstrap-datepicker/js/bootstrap-datepicker.min.js" type="text/javascript"></script>

<link rel="stylesheet" href="~/Content/global/css/jquery.timepicker.css" type="text/css" />
<script src="~/Content/global/scripts/jquery.timepicker.js" type="text/javascript"></script>


<script>
    $(document).ready(function () {


        $('#create').click(function () {
            $("#CreateModal").modal('show');


            $("#typeCheck").change(function () {
                var val = document.getElementById('typeCheck').value;
                var cg = document.getElementById('cg');
                var dr = document.getElementById('dr');



                if (val == 2) {
                    cg.style.display = 'block';
                    dr.style.display = 'none';
                    $("#cgID").prop('disabled', false);
                    $("#drID").prop('disabled', true);




                } else if (val == 3) {
                    cg.style.display = 'none';
                    dr.style.display = 'block';
                    $("#cgID").prop('disabled', true);
                    $("#drID").prop('disabled', false);



                }
                //else if (val == 4) {
                //    cg.style.display = 'none';
                //    dr.style.display = 'none';
                //    gt.style.display = 'block';
                //    sp.style.display = 'none';
                //    stDate.style.display = 'block';
                //    endDate.style.display = 'block';
                //    stTime.style.display = 'block';
                //    endTime.style.display = 'block';

                //} else if (val == 6) {
                //    cg.style.display = 'none';
                //    dr.style.display = 'none';
                //    gt.style.display = 'none';
                //    sp.style.display = 'block';
                //    stDate.style.display = 'block';
                //    endDate.style.display = 'block';
                //    stTime.style.display = 'block';
                //    endTime.style.display = 'block';
                //}

            });

        });


        $(document).delegate('.btn.btn-primary.space.edit', 'click', function () {
            $("#EditModal").modal('show');
            $("#typeCheck1").change(function () {
                var val = document.getElementById('typeCheck1').value;
                var cg = document.getElementById('cg1');
                var dr = document.getElementById('dr1');

                if (val == 2) {
                    cg.style.display = 'block';
                    dr.style.display = 'none';



                } else if (val == 3) {
                    cg.style.display = 'none';
                    dr.style.display = 'block';


                }
            });
            $.ajax({
                type: 'POST',
                dataType: 'json',
                data: {
                    id: $(this).attr('id'),
                },
                url: '@Url.Action("GetAllocationDetails", "Supervisor")',
                success: function (result) {

                    console.log(result);
                    $("#hidden").empty();
                    $("#allocationType").empty();

                    $("#allocationType").append("<input type='hidden' name='allocationType' value='assigned'/>");

                    $("#modalTitle").text("Edit Allocation");
                    $("#hidden").append("<input type='hidden' name='patientID' value='" + result.patient.patientID+"'/>");

                    $("#cgID1").val(result.assignedCaregiver.userID);

                    $("#drID1").val(result.assignedDoctor.userID);



                }
            });

        });

        
        $(document).delegate('.btn.btn-primary.space.editTemp', 'click', function () {
            $("#EditModal").modal('show');
            $("#typeCheck1").change(function () {
                var val = document.getElementById('typeCheck1').value;
                var cg = document.getElementById('cg1');
                var dr = document.getElementById('dr1');
                var note3 = document.getElementById('note3');
                var note4 = document.getElementById('note4');

                if (val == 2) {
                    cg.style.display = 'block';
                    dr.style.display = 'none';
                    note3.style.display = 'block';
                    note4.style.display = 'none';

                } else if (val == 3) {
                    cg.style.display = 'none';
                    dr.style.display = 'block';
                    note4.style.display = 'block';
                    note3.style.display = 'none';

                }
            });
            $.ajax({
                type: 'POST',
                dataType: 'json',
                data: {
                    id: $(this).attr('id'),
                },
                url: '@Url.Action("GetAllocationDetails", "Supervisor")',
                success: function (result) {

                    console.log(result);
                    $("#hidden").empty();
                    $("#allocationType").empty();
                    $("#note3").empty();
                    $("#note4").empty();

                    $("#modalTitle").text("Edit Temporary Allocation");

                    $("#hidden").append("<input type='hidden' name='patientID' value='" + result.patient.patientID + "'/>");
                    $("#allocationType").append("<input type='hidden' name='allocationType' value='temp'/>");


                    var cclass1 = document.getElementById('cclass1');
                    var cclass1l = document.getElementById('cclass1l');
                    var dclass1l = document.getElementById('dclass1l');
                    var dclass1 = document.getElementById('dclass1');

                    if (result.tempCaregiverInfo != null) {
                        $("#cgID1").val(result.tempCaregiverInfo.userID);

                    }
                    else {
                    cclass1.style.display = "none";
                    cclass1l.style.display = "none";

                    $("#note3").append("<span style='color: red'>Note:There is no temporary caregiver</span> <br />");

                }

                    if (result.tempDoctorInfo != null) {
                        $("#drID1").val(result.tempDoctorInfo.userID);

                    } else {
                        dclass1.style.display = "none";
                        dclass1l.style.display = "none";

                        $("#note4").append("<span style='color: red'>Note:There is no temporary doctor</span> <br />");

                    }

                    $("#typeCheck1").change(function () {
                        var val = document.getElementById('typeCheck1').value;
                        if (val == 2 && result.tempCaregiverInfo == null) {
                            $("#save").attr("disabled", true);
                        } else {
                            $("#save").attr("disabled", false);

                        }
                        if (val == 3 && result.tempDoctorInfo == null) {
                            $("#save").attr("disabled", true);
                        } else {
                            $("#save").attr("disabled", false);

                        }
                    });

                }
            });

        });

        $(document).delegate('.btn.btn.red.space.delete', 'click', function () {
            $("#DeleteModal").modal('show');
            $("#typeCheck2").change(function () {
                var val = document.getElementById('typeCheck2').value;
                var cg = document.getElementById('cg2');
                var dr = document.getElementById('dr2');
                var note1 = document.getElementById('note1');
                var note2 = document.getElementById('note2');

                if (val == 2) {
                    cg.style.display = 'block';
                    dr.style.display = 'none';
                    note1.style.display = 'block';
                    note2.style.display = 'none';


                } else if (val == 3) {
                    cg.style.display = 'none';
                    dr.style.display = 'block';
                    note2.style.display = 'block';
                    note1.style.display = 'none';

                }
            });
            $.ajax({
                type: 'POST',
                dataType: 'json',
                data: {
                    id: $(this).attr('id'),
                },
                url: '@Url.Action("GetAllocationDetails", "Supervisor")',
                success: function (result) {

                    console.log(result);
                    $("#hidden").empty();
                    $("#note2").empty();
                    $("#note1").empty();


                    $("#hidden").append("<input type='hidden' name='patientID' value='" + result.patient.patientID + "'/>");


                    var cclass = document.getElementById('cclass');
                    var cclassl = document.getElementById('cclassl');
                    var dclassl = document.getElementById('dclassl');
                    var dclass = document.getElementById('dclass');

                    if (result.tempCaregiverInfo != null) {
                         $("#cgID2").val(result.tempCaregiverInfo.userID);
                    } else {
                        cclass.style.display = "none";
                        cclassl.style.display = "none";

                        $("#note1").append("<span style='color: red'>Note:There is no temporary caregiver</span> <br />");

                    }

                    if (result.tempDoctorInfo != null) {
                        $("#drID2").val(result.tempDoctorInfo.userID);
                    } else {
                        dclass.style.display = "none";
                        dclassl.style.display = "none";
                        $("#note2").append("<span style='color: red'>Note:There is no temporary doctor</span> <br />");
                          
                    }


                    $("#typeCheck2").change(function () {
                        var val = document.getElementById('typeCheck2').value;
                        if (val == 2 && result.tempCaregiverInfo == null) {
                            $("#deleteBtn").attr("disabled", true);
                        } else {
                            $("#deleteBtn").attr("disabled", false);

                        }
                        if (val == 3 && result.tempDoctorInfo == null) {
                            $("#deleteBtn").attr("disabled", true);
                        } else {
                            $("#deleteBtn").attr("disabled", false);

                        }
                    });

                }
            });

        });

    });
</script>
