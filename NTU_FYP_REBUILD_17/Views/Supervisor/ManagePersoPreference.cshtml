@model NTU_FYP_REBUILD_17.ViewModels.PersonalPreferenceViewModel
@using NTU_FYP_REBUILD_17.Models

@{
    Layout = "~/Views/Shared/_LayoutSupervisor.cshtml";
}

@{
    int ID = 0;
}


<div class="portlet box blue-madison">
    <div class="portlet-title">
        <div class="caption">
            <i class="fa fa-folder-open-o"></i>
            @*@Html.Raw("<span class='caption-subject font-blue-madison bold uppercase'>" + @Model.patient.firstName + " " + @Model.patient.lastName + "'s Prescription Records</span>")*@
            @Model.patient.firstName  @Model.patient.lastName's Personal Preference
        </div>
        <div class="tools"> </div>
    </div>
    <div class="portlet-body">

        @if (TempData["success"] != null)
        {
            <div class="alert alert-success text-center" role="alert">@TempData["success"]</div>
        }

        @if (TempData["error"] != null)
        {
            <div class="alert alert-danger  text-center" role="alert">@Html.Raw(TempData["error"])</div>
        }
        @*@Html.HiddenFor(p => p.id, new { @Value = @Model.CentreActivities.centreActivityID, @id = "ab" });*@

        <table class="table">

            <tr>

                <td>
                    <div class="row">
                        <div class="col-lg-5">
                            <b>Likes</b>
                        </div>
                        <div class="col-lg-5">
                            <b>Dislikes</b>
                        </div>
                    </div>
                </td>

            </tr>

            <tr>
                <td>
                    <div class="row">
                        <div class="col-lg-5">
                            @foreach (var item in Model.ListOfPatientPrefLike)
                            {
                                <div class="row">
                                    <div class="col-lg-7">
                                        @item.likes.value
                                    </div>
                                    <div class="col-lg-5">

                                        <button id="@item.likesID" class="btn btn-primary btn-sm space likeedit" type="submit">Edit</button>

                                        <a href="@Url.Action("DeletePersoLike", "Supervisor", new { lId = item.likesID, patientId = Model.patient.patientID })" class="btn btn-sm red space" onclick="return confirm('Are you sure you want to delete?')">
                                            Delete
                                        </a>

                                    </div>
                                </div>
                                <br />


                            }

                        </div>
                        <div class="col-lg-5">
                            @foreach (var item in Model.ListOfPatientPrefDislike)
                            {
                                <div class="row">
                                    <div class="col-lg-7">
                                        @item.dislikes.value <br />
                                    </div>
                                    <div class="col-lg-5">

                                        <button id="@item.dislikesID" class="btn btn-primary btn-sm space dislikeedit" type="submit">Edit</button>

                                        <a href="@Url.Action("DeletePersoDislike", "Supervisor",new { dlId = item.dislikesID, patientId = Model.patient.patientID})" class="btn btn-sm red space" onclick="return confirm('Are you sure you want to delete?')">
                                            Delete
                                        </a>

                                    </div>
                                </div>
                                <br />
                            }
                        </div>
                    </div>
                </td>


            </tr>





        </table>

        <div class="margiv-top-10 margin-bottom-10 pull-right">
            <button id="create" class="btn btn-primary space" type="submit">Create</button>

            <input class="btn grey" type="button" onclick="window.location.replace('@Url.Action("ManagePatient", "Supervisor")')" value="Cancel" />
        </div>
        <br /><br />


    </div>
</div>


@*Modal for Create*@
<div id="CreateModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            @using (Html.BeginForm("AddPersoPreference", "Supervisor", FormMethod.Post, new { @role = "form", @id = "form1" }))
            {
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>

                    <h4 class="modal-title" id="modal-title">Create Personal Preference</h4>

                </div>

                <div class="modal-body" id="table-body">

                    @Html.HiddenFor(m => m.patient.patientID, new { @Value = @Model.patient.patientID, @id = "ab" })

                    <table>
                        <thead>
                        </thead>
                        <tbody class="table">
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">Preference</label>
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(x => x.preference, new List<SelectListItem>
                                                                                           {
                                                                                                 new SelectListItem() {Text = "Like", Value="like"},
                                                                                                 new SelectListItem() {Text = "Dislike", Value="dislike"},

                                                                                           }, new { @class = "form-control" , @id="prefCheck"})

                                            <br />
                                        </div>
                                    </div>


                                </td>
                            </tr>

                            <tr id="like">
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">Likes</label>
                                        <div class="col-md-10">

                                            @Html.DropDownListFor(m => m.likes.likeItemID, new SelectList(Model.likesEnum, "list_likeID", "value"), new { @class = "form-control" , id="likeVal1"})

                                            <br />
                                        </div>
                                    </div>


                                </td>
                            </tr>

                            <tr id="dislike">
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">Dislikes</label>
                                        <div class="col-md-10">

                                            @Html.DropDownListFor(m => m.dislikes.dislikeItemID, new SelectList(Model.dislikesEnum, "list_dislikeID", "value"), new { @class = "form-control", id = "dislikeVal1" })

                                            <br />
                                        </div>
                                    </div>
                                </td>
                            </tr>

                            <tr>
                                <td>
                                    <div class="form-group" id="preferenceOther" style="display:none">
                                        <label class="col-md-10 control-label">Other Preferences</label>
                                        <div class="col-md-10">

                                            @Html.TextBoxFor(m => m.otherPreferences, new { @class = "form-control" })

                                            <br />
                                        </div>
                                    </div>
                                </td>

                            </tr>

                        </tbody>
                    </table>

                </div>

                <div class="modal-footer">
                    <div class="text-center">
                        <button type="submit" class="btn btn-primary space" id="add">Add</button>
                        <button type="button" class="btn btn-default space" data-dismiss="modal">Close</button>
                    </div>
                </div>
            }
        </div>

    </div>

</div>

<div id="EditModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            @using (Html.BeginForm("EditPersoPreference", "Supervisor", FormMethod.Post, new { @role = "form", @id = "form1" }))
            {
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>

                    <h4 class="modal-title" id="modal-title">Edit Personal Preference</h4>

                </div>

                <div class="modal-body" id="table-body">

                    @Html.HiddenFor(m => m.patient.patientID, new { @Value = @Model.patient.patientID, @id = "ab" })
                    <div id="hidden"></div>
                    <table>
                        <thead>
                        </thead>
                        <tbody class="table">
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">Preference</label>
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(x => x.preference, new List<SelectListItem>
                                                                                           {
                                                                                                 new SelectListItem() {Text = "Like", Value="like"},
                                                                                                 new SelectListItem() {Text = "Dislike", Value="dislike"},

                                                                                           }, new { @class = "form-control" , @id="editprefCheck"})

                                            <br />
                                        </div>
                                    </div>

                                </td>
                            </tr>

                            <tr id="editlike">
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">Likes</label>
                                        <div class="col-md-10">

                                            @Html.DropDownListFor(m => m.likes.likeItemID, new SelectList(Model.likesEnum, "list_likeID", "value"), new { @class = "form-control", id = "likeVal" })

                                            <br />
                                        </div>
                                    </div>
                                </td>
                            </tr>

                            <tr id="editdislike">
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">Dislikes</label>
                                        <div class="col-md-10">

                                            @Html.DropDownListFor(m => m.dislikes.dislikeItemID, new SelectList(Model.dislikesEnum, "list_dislikeID", "value"), new { @class = "form-control", id = "dislikeVal" })

                                            <br />
                                        </div>
                                    </div>
                                </td>
                            </tr>

                            <tr>
                                <td>
                                    <div class="form-group" id="preferenceOther1" style="display:none">
                                        <label class="col-md-10 control-label">Other Preferences</label>
                                        <div class="col-md-10">

                                            @Html.TextBoxFor(m => m.otherPreferences, new { @class = "form-control", @id="otherPreference1" })

                                            <br />
                                        </div>
                                    </div>
                                </td>

                            </tr>
                        </tbody>
                    </table>

                </div>

                <div class="modal-footer">
                    <div class="text-center">
                        <button type="submit" class="btn btn-primary space">Save Changes</button>
                        <button type="button" class="btn btn-default space" data-dismiss="modal">Close</button>
                    </div>
                </div>
            }
        </div>

    </div>

</div>





<script src="~/Content/global/plugins/jquery.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/js.cookie.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/jquery-slimscroll/jquery.slimscroll.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/jquery.blockui.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/bootstrap-switch/js/bootstrap-switch.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/bootstrap-fileinput/bootstrap-fileinput.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/jquery.sparkline.min.js" type="text/javascript"></script>
<script src="~/Content/global/scripts/app.min.js" type="text/javascript"></script>



<link href="~/Content/global/plugins/jquery-ui/jquery-ui.min.css" rel="stylesheet" type="text/css" />
<script src="~/Content/global/plugins/jquery-ui/jquery-ui.min.js" type="text/javascript"></script>

<script src="~/Content/global/plugins/bootstrap-datepicker/js/bootstrap-datepicker.min.js" type="text/javascript"></script>

<link rel="stylesheet" href="~/Content/global/css/jquery.timepicker.css" type="text/css" />
<script src="~/Content/global/scripts/jquery.timepicker.js" type="text/javascript"></script>

@*Input Checks*@
<script src="~/Content/global/scripts/inputChecks.js" type="text/javascript"></script>

<script>
    $(document).ready(function () {
        preferencesCheck();
        

        $("#prefCheck").val("like");
        var like = document.getElementById('like');
        var dislike = document.getElementById('dislike');
        dislike.style.display = 'none';

        $('#create').click(function () {
            $("#CreateModal").modal('show');

            $("#prefCheck").change(function () {
                var val = document.getElementById('prefCheck').value;


                if (val == 'like') {
                    like.style.display = 'block';
                    dislike.style.display = 'none';
                }
                else if (val == 'dislike') {
                    dislike.style.display = 'block';
                     like.style.display = 'none';
                }
            });
        });


        $(document).delegate('.btn.btn-primary.space.likeedit', 'click', function () {
            $("#EditModal").modal('show');

            $("#editprefCheck").val("like");

            var editlike = document.getElementById('editlike');
            var editdislike = document.getElementById('editdislike');
            editdislike.style.display = 'none';

            $("#editprefCheck").change(function () {
                var val = document.getElementById('editprefCheck').value;

                if (val == 'like') {
                    editlike.style.display = 'block';
                    editdislike.style.display = 'none';
                }
                else if (val == 'dislike') {
                    editdislike.style.display = 'block';
                    editlike.style.display = 'none';
                }
            });

            $.ajax({
                type: 'POST',
                dataType: 'json',
                data: {
                    id: $(this).attr('id'),
                },
                url: '@Url.Action("GetLikePreference", "Supervisor")',
                success: function (result) {
                    var element = document.getElementById('preferenceOther1');

                    if (result.likesDetails.List_Like.isChecked != 0) {
                        element.style.display = 'none';
                        $("#likeVal").val(result.likesDetails.likeItemID);

                    } else {
                        element.style.display = 'block';                        

                        $("#likeVal").val(-1);


                        $("#otherPreference1").val(result.likesDetails.List_Like.value);
                    }


                    $("#hidden").append("<input type='hidden' name='likeID' value='" + result.likesDetails.likeID+"'/>");


                }
            });

        });


        $(document).delegate('.btn.btn-primary.space.dislikeedit', 'click', function () {
            $("#EditModal").modal('show');

            $("#editprefCheck").val("dislike");

            var editlike = document.getElementById('editlike');
            var editdislike = document.getElementById('editdislike');
            editlike.style.display = 'none';


            $("#editprefCheck").change(function () {
                var val = document.getElementById('editprefCheck').value;


                if (val == 'like') {
                    editlike.style.display = 'block';
                    editdislike.style.display = 'none';
                }
                else if (val == 'dislike') {
                    editdislike.style.display = 'block';
                    editlike.style.display = 'none';
                }
            });

            $.ajax({
                type: 'POST',
                dataType: 'json',
                data: {
                    id: $(this).attr('id'),
                },
                url: '@Url.Action("GetDislikePreference", "Supervisor")',
                success: function (result) {
                    var element = document.getElementById('preferenceOther1');

                    if (result.dislikesDetails.List_Dislike.isChecked != 0) {
                        element.style.display = 'none';

                        $("#dislikeVal").val(result.dislikesDetails.dislikeItemID);


                    } else {
                        element.style.display = 'block';                        
                        $("#dislikeVal").val(-1);


                        $("#otherPreference1").val(result.dislikesDetails.List_Dislike.value);

                    }
                    $("#hidden").append("<input type='hidden' name='dislikeID' value='" + result.dislikesDetails.dislikeID+"'/>");







                }
            });

        });


    });
</script>

