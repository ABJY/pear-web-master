@using Microsoft.AspNet.Identity
@using NTU_FYP_REBUILD_17.Models
@model NTU_FYP_REBUILD_17.ViewModels.ManagePreferencesViewModel
@{
    ViewBag.Title = "ManagePreferences";
    Layout = "~/Views/Shared/_LayoutSupervisor.cshtml";
}

<div class="portlet box blue-madison">
    <div class="portlet-title">
        <div class="caption">
            <i class="fa fa-folder-open-o"></i>Manage @Model.patient.firstName @Model.patient.lastName's Preferences
        </div>
        <div class="tools"> </div>
    </div>
    <div class="portlet-body">
        @if (TempData["success"] != null)
        {
            <div class="alert alert-success text-center" role="alert">@TempData["success"]</div>
        }

        @if (TempData["error"] != null)
        {
            <div class="alert alert-danger  text-center" role="alert">@Html.Raw(TempData["error"])</div>
        }

        <table class="table table-striped table-bordered table-hover dt-responsive" id="sample_3" cellspacing="0">
            <thead>
                <tr>
                    @*<th class="min-tablet" rowspan="2">Title</th>*@
                    @*<th class="desktop4" colspan="3">Preferences</th>*@
                    @*<th class="desktop4" colspan="2">Preferences</th>*@
                    @*<th class="desktop4"></th>*@
                    @*<th class="desktop4" colspan="2">Schedule</th>*@
                    @*<th class="desktop4"></th>*@

                    @*<th class="desktop4" rowspan="2">Recommended</th>*@

                    @*<th class="desktop4">Doctor's Remark</th>*@

                    <th class="min-tablet" width="15%">Patient Name</th>
                    <th class="desktop4" width="10%">Preferences</th>
                    <th class="desktop4" width="9%">Schedule</th>
                    <th class="desktop4" width="10%">Doc Recommended</th>
                    <th class="desktop4" width="20%">Doc Remarks </th>
                    <th class="desktop4">Exclusion Details </th>


                </tr>



            </thead>
            <tbody>
                @*@using (Html.BeginForm("EditPreferences", "Supervisor", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "form1" }))
                    {*@

                @{ int i = 0; }

                @foreach (var x in Model.ListOfActivity)
                {
                    <tr>
                        <td>
                            @if (x.activityExcluded == null)
                            {
                                @x.actPreference.CentreActivity.activityTitle

                            }
                            else if (x.activityExcluded != null)
                            {
                                @x.activityExcluded.CentreActivity.activityTitle


                            }
                        </td>


                        <td>
                            <div class="form-group">
                                @if (x.actPreference.isLike == 1)
                                {
                                    <span class="fa fa-lg fa-smile-o space text-success"></span>
                                    <a href="@Url.Action("LikeActivityPref", "Supervisor", new { Id = x.actPreference.activityPreferencesID, patientId = Model.patient.patientID, type = "neutral" })" class="fa fa-lg fa-meh-o space text-muted" onclick="return confirm('Are you sure you want to change to NEUTRAL?')"></a>
                                    <a href="@Url.Action("LikeActivityPref", "Supervisor", new { Id = x.actPreference.activityPreferencesID, patientId = Model.patient.patientID, type = "dislike" })" class="fa fa-lg fa-frown-o space text-muted" onclick="return confirm('Are you sure you want to change to DISLIKE?')"></a>
                                }
                                else if (x.actPreference.isNeutral == 1)
                                {
                                    <a href="@Url.Action("LikeActivityPref", "Supervisor", new { Id = x.actPreference.activityPreferencesID, patientId = Model.patient.patientID, type = "like" })" class="fa fa-lg fa-smile-o space text-muted" onclick="return confirm('Are you sure you want to change to LIKE?')"></a>
                                    <span class="fa fa-lg fa-meh-o space text-warning"></span>
                                    <a href="@Url.Action("LikeActivityPref", "Supervisor", new { Id = x.actPreference.activityPreferencesID, patientId = Model.patient.patientID, type = "dislike" })" class="fa fa-lg fa-frown-o space text-muted" onclick="return confirm('Are you sure you want to change to DISLIKE?')"></a>

                                }
                                else if (x.actPreference.isDislike == 1)
                                {
                                    <a href="@Url.Action("LikeActivityPref", "Supervisor", new { Id = x.actPreference.activityPreferencesID, patientId = Model.patient.patientID, type = "like" })" class="fa fa-lg fa-smile-o space text-muted" onclick="return confirm('Are you sure you want to change to LIKE?')"></a>
                                    <a href="@Url.Action("LikeActivityPref", "Supervisor", new { Id = x.actPreference.activityPreferencesID, patientId = Model.patient.patientID, type = "neutral" })" class="fa fa-lg fa-meh-o space text-muted" onclick="return confirm('Are you sure you want to change to NEUTRAL?')"></a>
                                    <span class="fa fa-lg fa-frown-o space text-danger"></span>

                                }

                            </div>
                        </td>


                        @{ i++; }



                        <td>
                            @if (x.activityExcluded != null)
                            {
                                <a href="@Url.Action("IncludeActivityPref", "Supervisor", new { Id = x.activityExcluded.activityExclusionId, patientId = Model.patient.patientID })" class="fa fa-lg fa-check space text-muted "></a>
                                <span class="fa fa-lg fa-times space text-danger"></span>

                            }
                            else
                            {
                                <span class="fa fa-lg fa-check space text-success"></span>

                                <a class="fa fa-lg fa-times space text-muted excludeAct" id=@x.activityID xtitle='@x.actPreference.CentreActivity.activityTitle'></a>
                            }
                        </td>

                        <td>
                            @if (x.actPreference.doctorRecommendation == 2)
                            {
                                @*<span class="glyphicon glyphicon-minus text-secondary"></span>*@
                                <span>-</span>
                            }
                            else if (x.actPreference.doctorRecommendation == 1)
                            {
                                <span>Yes</span>

                                @*<span class="glyphicon glyphicon-ok text-success"></span>*@
                            }
                            else
                            {
                                <span>No</span>
                                @*<span class="glyphicon glyphicon-remove text-danger"></span>*@

                            }

                        </td>
                        <td>
                            @*<div class="container">
                                <div class="row">*@
                            @*<label><b>Doctor's Remark:</b></label>*@
                            @if (x.actPreference.doctorRemarks != null)
                            {
                                @x.actPreference.doctorRemarks<br /><br />
                            }
                            else
                            {
                                <span>nil</span><br /><br />
                            }
                        </td>
                        <td>
                            @if (x.activityExcluded != null)
                            {

                                <label>
                                    <b><u>Exclusion</u></b>
                                    <a class="fa fa-pencil editExclusion" id="@x.activityExcluded.activityExclusionId"></a>
                                </label><br />

                                <label><b>Start Date:</b></label>

                                @x.activityExcluded.dateTimeStart.ToString("dd/MM/yyyy")<br />


                                <label><b>End Date:</b></label>
                                @x.activityExcluded.dateTimeEnd.ToString("dd/MM/yyyy")<br />

                                <label><b>Notes:</b></label>
                                @x.activityExcluded.notes<br />


                            }
                            @*</div>
                                </div>*@
                        </td>
                    </tr>
                }
                @*}*@

            </tbody>
        </table>
        <br /><br />
        <div class="margiv-top-10 margin-bottom-10 pull-right">
            @*<button id="create" class="btn btn-primary space" type="submit">Save Changes</button>*@
            <input class="btn grey" type="button" onclick="window.location.replace('@Url.Action("ManagePatient", "Supervisor")')" value="Cancel" />
        </div>
        <br /><br />

    </div>
</div>

<div id="ExcludeModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            @using (Html.BeginForm("AddActivityExclusion", "Supervisor", FormMethod.Post, new { @role = "form", @id = "form1" }))
            {
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title" id="excludeModTitle"></h4>
                </div>
                <div class="modal-body">
                    @Html.HiddenFor(m => m.patient.patientID, new { @Value = @Model.patient.patientID, @id = "ab" })


                    <label>
                        <i class="required"></i>
                        <b>Start Date</b>
                    </label><br />
                    @Html.TextBoxFor(m => m.actExInput.dateTimeStart, "dd/mm/yyyy", new { @class = "form-control date-picker", @data_date_format = "dd/mm/yyyy", required = "required", id = "datetimepicker1" })
                    <span style="display: none; color:red;" id="startDateError"></span>
                    <span style="display: none; color:red;" id="startDateError1"></span>
                    <span style="display: none; color:red;" id="startDateError2"></span>
                    <br />

                    <label>
                        <i class="required"></i>
                        <b>End Date</b>
                    </label><br />
                    @Html.TextBoxFor(m => m.actExInput.dateTimeEnd, "dd/mm/yyyy", new { @class = "form-control date-picker", @data_date_format = "dd/mm/yyyy", required = "required", id = "datetimepicker2" })
                    <span style="display: none; color:red;" id="endDateError"></span>
                    <br />

                    <label>
                        <i class="required"></i>
                        <b>Notes</b>
                    </label><br />
                    @Html.TextBoxFor(m => m.actExInput.notes, new { @class = "form-control" })
                    <br />
                    <input type="hidden" id="hiddenActivityID" name="activityID" />


                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary" id="excludeSubmit">Submit</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            }
        </div>

    </div>
</div>

<div id="EditModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            @using (Html.BeginForm("EditActivityExclusion", "Supervisor", FormMethod.Post, new { @role = "form", @id = "form1" }))
            {
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title" id="excludeModTitle1"></h4>
                </div>
                <div class="modal-body">
                    @Html.HiddenFor(m => m.patient.patientID, new { @Value = @Model.patient.patientID, @id = "ab" })


                    <label><b>Start Date</b></label><br />
                    @Html.TextBoxFor(m => m.actExInput.dateTimeStart, "dd/mm/yyyy", new { @class = "form-control date-picker", @data_date_format = "dd/mm/yyyy", required = "required", id = "datetimepicker3" })
                    <span style="display: none; color:red;" id="mstartDateError"></span>
                    <span style="display: none; color:red;" id="mstartDateError1"></span>
                    <span style="display: none; color:red;" id="mstartDateError2"></span>
                    <br />

                    <label><b>End Date</b></label><br />
                    @Html.TextBoxFor(m => m.actExInput.dateTimeEnd, "dd/mm/yyyy", new { @class = "form-control date-picker", @data_date_format = "dd/mm/yyyy", required = "required", id = "datetimepicker4" })
                    <span style="display: none; color:red;" id="mendDateError"></span>

                    <br />

                    <label><b>Notes</b></label><br />
                    @Html.TextBoxFor(m => m.actExInput.notes, new { @class = "form-control", id = "editNotes" })
                    <br />
                    <input type="hidden" id="hiddenActivityID1" name="exActivityID" />


                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary" id="editSubmit">Submit</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            }
        </div>

    </div>
</div>


<script src="~/Content/global/scripts/inputChecks.js" type="text/javascript"></script>

<script src="~/Content/global/plugins/bootstrap-datepicker/js/bootstrap-datepicker.min.js" type="text/javascript"></script>

@*DataTable*@
<link href="~/Content/global/plugins/datatables/datatables.min.css" rel="stylesheet" type="text/css" />
<link href="~/Content/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.css" rel="stylesheet" type="text/css" />
<script src="~/Content/global/plugins/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
<script src="~/Content/global/scripts/datatable.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/datatables/datatables.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.js" type="text/javascript"></script>
<link href="~/Content/global/plugins/bootstrap/css/custom.css" rel="stylesheet" type="text/css">

<script src="~/Content/pages/scripts/table-datatables-responsive.min.js" type="text/javascript"></script>

<link href="~/Content/global/plugins/bootstrap/css/custom.css" rel="stylesheet" type="text/css">
<script>
    $(document).ready(function () {

        //$('#sample_3').DataTable().destroy();

        //$('#sample_3').DataTable({
        //    columnDefs: [
        //        { "orderable": false, "targets": [ 1, 2, 3] },
        //    ],
        //});

        $('#datetimepicker1').datepicker({
            defaultDate: null,
        });

        $('#datetimepicker2').datepicker({
            defaultDate: null,
        });

        $('#datetimepicker3').datepicker({
            defaultDate: null,
        });

        $('#datetimepicker4').datepicker({
            defaultDate: null,
        });

        $(document).delegate('.excludeAct', 'click', function () {

            $("#ExcludeModal").modal('show');

            var id = $(this).attr('id');
            var title = $(this).attr('xtitle');

            $("#hiddenActivityID").empty();
            $("#hiddenActivityID").val(id);

            $("#excludeModTitle").text("Exclude " + title);
            console.log(title);


            //$('#excludeAct').click(function () {
            //    $("#ExcludeModal").modal('show');

            //});
        });



        $('#datetimepicker1').change(function () {
            dateCheckaddPatient();
        });

        $('#datetimepicker2').change(function () {
            dateCheckaddPatient();
        });

        $('#datetimepicker3').change(function () {
            checkDate()
        });

        $('#datetimepicker4').change(function () {
            checkDate()
        });

        $("#excludeSubmit").click(function () {
            dateCheckaddPatient();
        });

            
        $("#editSubmit").click(function () {
                checkDate();
            });

        $(document).delegate('.editExclusion', 'click', function () {
            $("#EditModal").modal('show');

            $.ajax({
                type: 'POST',
                dataType: 'json',
                data: {
                    id: $(this).attr('id'),
                },
                url: '@Url.Action("GetExclusionById", "Supervisor")',
                success: function (result) {

                    console.log(result);

                    $("#hiddenActivityID1").empty();

                    $("#hiddenActivityID1").val(result.activityExclusionId);

                    $("#editNotes").val(result.notes);

                    var dateStart = new Date(parseInt(result.dateTimeStart.substr(6)));
                    var dd = dateStart.getDate();
                    var mm = dateStart.getMonth() + 1; //January is 0!

                    var yyyy = dateStart.getFullYear();
                    if (dd < 10) {
                        dd = '0' + dd;
                    }
                    if (mm < 10) {
                        mm = '0' + mm;
                    }
                    var startDate = dd + '/' + mm + '/' + yyyy;

                    $("#datetimepicker3").val(startDate);



                    var dateEnd = new Date(parseInt(result.dateTimeEnd.substr(6)));
                    var dd = dateEnd.getDate();
                    var mm = dateEnd.getMonth() + 1; //January is 0!

                    var yyyy = dateEnd.getFullYear();
                    if (dd < 10) {
                        dd = '0' + dd;
                    }
                    if (mm < 10) {
                        mm = '0' + mm;
                    }
                    var endDate = dd + '/' + mm + '/' + yyyy;
                    $("#datetimepicker4").val(endDate);


                }
            });

        });

        function checkDate() {
            var datetimepicker1Val = $("#datetimepicker3").val();
            var datetimepicker2Val = $("#datetimepicker4").val();
      

            var arrStartDate = datetimepicker1Val.split("/");
            var stdate = new Date(arrStartDate[2], arrStartDate[1], arrStartDate[0]);
            var arrEndDate = datetimepicker2Val.split("/");
            var enddate = new Date(arrEndDate[2], arrEndDate[1], arrEndDate[0]);


            var datetime = new Date();
            var dd = datetime.getDate();
            var mm = datetime.getMonth() + 1; //January is 0!

            var yyyy = datetime.getFullYear();
            if (dd < 10) {
                dd = '0' + dd;
            }
            if (mm < 10) {
                mm = '0' + mm;
            }
            var d = dd + '/' + mm + '/' + yyyy;
            var arrDate = d.split("/");
            var tdate = new Date(arrDate[2], arrDate[1], arrDate[0]);

            var errorFlag = 0;
      
            if (stdate == enddate && enddate != "") {
                document.getElementById("mstartDateError1").innerHTML = "Start date and end date cannot be on the same day.";
                document.getElementById("mstartDateError1").style.display = "block";
                errorFlag = 1;

            } else {
                document.getElementById("mstartDateError1").innerHTML = "";
                document.getElementById("mstartDateError1").style.display = "none";
            }

            if (stdate > enddate && enddate != "") {
                document.getElementById("mstartDateError1").innerHTML = "Start date cannot be after end date.";
                document.getElementById("mstartDateError1").style.display = "block";
                errorFlag = 1;

            } else {
                document.getElementById("mstartDateError1").innerHTML = "";
                document.getElementById("mstartDateError1").style.display = "none";
            }


            if (enddate < tdate && stdate != "") {
                document.getElementById("mendDateError").innerHTML = "End date cannot be before today.";
                document.getElementById("mendDateError").style.display = "block";
                errorFlag = 1;
            } else {
                document.getElementById("mendDateError").innerHTML = "";
                document.getElementById("mendDateError").style.display = "none";
            }

            if (errorFlag == 1) {
                event.preventDefault();
                return false;
            } else {
                return true;
            }
        }


    });

</script>