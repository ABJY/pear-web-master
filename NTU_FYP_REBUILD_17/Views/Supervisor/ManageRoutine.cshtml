@model NTU_FYP_REBUILD_17.ViewModels.RoutineViewModel
@using NTU_FYP_REBUILD_17.Models

@{
    ViewBag.Title = "ManageRoutine";
    Layout = "~/Views/Shared/_LayoutSupervisor.cshtml";
}

@{
    int ID = 0;
}

<div id="home" class="tab-pane fade in active">
    <div class="portlet box blue-madison">
        <div class="portlet-title">
            <div class="caption">
                <i class="fa fa-folder-open-o"></i>
                @*@Html.Raw("<span class='caption-subject font-blue-madison bold uppercase'>" + @Model.patient.firstName + " " + @Model.patient.lastName + "'s Prescription Records</span>")*@
                @Model.patient.firstName  @Model.patient.lastName's Routine
            </div>
            <div class="tools"> </div>
        </div>
        <div class="portlet-body">
            @if (TempData["success"] != null)
            {
                <div class="alert alert-success text-center" role="alert">@TempData["success"]</div>
            }

            @if (TempData["error"] != null)
            {
                <div class="alert alert-danger  text-center" role="alert">@Html.Raw(TempData["error"])</div>
            }

            <h4><u><b>Routine Included</b></u></h4>
            <table class="table table-striped table-bordered table-hover dt-responsive" id="sample_3" cellspacing="0">
                <thead>
                    <tr>
                        <th class="min-tablet">Event Name</th>
                        <th class="desktop4">Day</th>
                        <th class="desktop4">Start Date</th>
                        <th class="desktop4">End Date</th>
                        <th class="desktop4">Start Time</th>
                        <th class="desktop4">End Time</th>
                        <th class="desktop4"></th>
                        <th class="none">Concerning Issues</th>
                        <th class="none">Notes</th>


                    </tr>
                </thead>
                <tbody>
                    @*@{var includedList = Model.ListOfRoutineIncluded.OrderBy(x => x.routineIncluded.endDate.Day)
                        .ThenBy(x => x.routineIncluded.endDate.Month)
                        .ThenBy(x => x.routineIncluded.endDate.Year);}*@


                    @foreach (var item in Model.ListOfRoutineIncluded)
                    {
                        <tr>
                            <td>@item.routineIncluded.eventName</td>
                            <td>@item.routineIncluded.day</td>
                            <td>@item.routineIncluded.startDate.ToString("dd/MM/yyyy")</td>
                            <td> @item.routineIncluded.endDate.ToString("dd/MM/yyyy")</td>
                            <td>@item.routineIncluded.startTime</td>
                            <td>@item.routineIncluded.endTime</td>
                            <td>
                                <button id="@item.routineIncluded.routineID" class="btn btn-primary space edit" type="submit">Edit</button>
                                <a class="btn btn white space excludePrompt" value="@item.routineIncluded.routineID">Exclude</a>

                                <a href="@Url.Action("DeleteRoutine", "Supervisor",new { roId = @item.routineIncluded.routineID, patientId = Model.patient.patientID})" class="btn btn red space" onclick="return confirm('Are you sure you want to delete?')">
                                    Delete
                                </a>

                            </td>
                            <td>
                                @if (@item.routineIncluded.concerningIssues != null)
                                {

                                    @item.routineIncluded.concerningIssues
                                }
                                else
                                {
                                    @*<b>Concerning Issues:</b>*@
                                    <span>nil</span>
                                }

                            </td>

                            <td>@item.routineIncluded.notes</td>
                        </tr>
                    }
                </tbody>
            </table>
            <br />        <br /><br />


            <h4><u><b>Routine Excluded</b></u></h4>
            <table class="table table-striped table-bordered table-hover dt-responsive" id="sample_4" cellspacing="0">
                <thead>
                    <tr>
                        <th class="min-tablet">Event Name</th>
                        <th class="desktop4">Day</th>
                        <th class="desktop4">Start Date</th>
                        <th class="desktop4">End Date</th>
                        <th class="desktop4">Start Time</th>
                        <th class="desktop4">End Time</th>
                        <th class="desktop4"></th>
                        <th class="none">Reason for Exclusion</th>
                        <th class="none">Concerning Issues</th>
                        <th class="none">Notes</th>
                    </tr>
                </thead>
                <tbody>
                    @{ var excludedList = Model.ListOfRoutineExcluded.OrderByDescending(x => x.routineExcluded.eventName);}
                    @foreach (var item in excludedList)
                    {
                        <tr>
                            <td>@item.routineExcluded.eventName</td>
                            <td>@item.routineExcluded.day</td>
                            <td>@item.routineExcluded.startDate.ToString("dd/MM/yyyy")</td>
                            <td> @item.routineExcluded.endDate.ToString("dd/MM/yyyy")</td>
                            <td>@item.routineExcluded.startTime</td>
                            <td>@item.routineExcluded.endTime</td>
                            <td>
                                <button id="@item.routineExcluded.routineID" class="btn btn-primary btn-sm space edit" type="submit">Edit</button>

                                <a href="@Url.Action("IncludeRoutine", "Supervisor",new { roID = @item.routineExcluded.routineID, patientId = Model.patient.patientID})" class="btn btn white space" onclick="return confirm('Are you sure you want to include this routine?')">
                                    Include
                                </a>

                                <a href="@Url.Action("DeleteRoutine", "Supervisor",new { plId = @item.routineExcluded.routineID, patientId = Model.patient.patientID})" class="btn btn red space" onclick="return confirm('Are you sure you want to delete?')">
                                    Delete
                                </a>

                            </td>
                            <td>
                                @if (item.routineExcluded.reasonForExclude != null)
                                {
                                    @item.routineExcluded.reasonForExclude
                                }
                                else
                                {
                                    <span>nil</span>

                                }
                            </td>
                            <td>
                                @if (@item.routineExcluded.concerningIssues != null)
                                {

                                    @item.routineExcluded.concerningIssues
                                }
                                else
                                {
                                    @*<b>Concerning Issues:</b>*@
                                    <span>nil</span>
                                }

                            </td>

                            <td>@item.routineExcluded.notes</td>

                        </tr>
                    }
                </tbody>
            </table>

            <br /><br />
            <div class="margiv-top-10 margin-bottom-10 pull-right">
                <button id="create" class="btn btn-primary space" type="submit">Create</button>

                <input class="btn grey" type="button" onclick="window.location.replace('@Url.Action("ManagePatient", "Supervisor")')" value="Cancel" />
            </div>
            <br /><br />



        </div>
    </div>
</div>




@*Modal for Create*@
<div id="CreateModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            @using (Html.BeginForm("AddRoutine", "Supervisor", FormMethod.Post, new { @role = "form", @id = "form1" }))
            {
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>

                    <h4 class="modal-title" id="modal-title">Create Routine</h4>

                </div>

                <div class="modal-body" id="table-body">

                    @Html.HiddenFor(m => m.patient.patientID, new { @Value = @Model.patient.patientID, @id = "ab" })

                    <table>
                        <thead>
                        </thead>
                        <tbody class="table">
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            <i class="required"></i>
                                            Event Name
                                        </label>
                                        <div class="col-md-10">

                                            @Html.DropDownListFor(m => m.routine.centreActivityID, new SelectList(Model.activityList, "centreActivityID", "activityTitle"), new { @class = "form-control", @id = "activityCheck" })

                                            <br />
                                        </div>
                                    </div>

                                    <div class="form-group" id="activityOther" style="display:none">
                                        <label class="col-md-10 control-label">
                                            <i class="required"></i>
                                            Other Event
                                        </label>
                                        <div class="col-md-10">

                                            @Html.TextBoxFor(m => m.routine.eventName, new { @class = "form-control", id = "otherEventName" })

                                            <br />
                                        </div>
                                    </div>
                                </td>

                            </tr>


                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            <i class="required"></i>
                                            Day
                                        </label>
                                        <div class="col-md-10">
                                            @Html.ListBoxFor(x => x.day, new List<SelectListItem>
                                            {
                                                  new SelectListItem() {Text = "Everyday", Value="Everyday"},
                                                  new SelectListItem() {Text = "Monday", Value="Monday"},
                                                  new SelectListItem() {Text = "Tuesday", Value="Tuesday"},
                                                  new SelectListItem() {Text = "Wednesday", Value="Wednesday"},
                                                  new SelectListItem() {Text = "Thursday", Value="Thursday"},
                                                  new SelectListItem() {Text = "Friday", Value="Friday"},
                                                  //new SelectListItem() {Text = "Random", Value="Random"}

                                            }, new { @class = "form-control", id = "dayCheck", @multiple="multiple", @required="required"})
                                            <span style="display: none; color:red;" id="dayCheckError"></span>
                                            <br />
                                        </div>
                                    </div>

                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            <i class="required"></i>
                                            Start Date
                                        </label>
                                        <div class="col-md-10">
                                            @*@Html.TextBoxFor(m => m.problemLog.notes, new { @class = "form-control" })*@
                                            @Html.TextBoxFor(m => m.routine.startDate, "dd/mm/yyyy", new { @class = "form-control date-picker", @data_date_format = "dd/mm/yyyy", id = "datetimepicker1" })
                                            <span style="display: none; color:red;" id="startDateError"></span>
                                            <span style="display: none; color:red;" id="startDateError1"></span>
                                            <span style="display: none; color:red;" id="startDateError2"></span>
                                            <br />
                                        </div>
                                    </div>
                                </td>

                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            <i class="required"></i>
                                            End Date
                                        </label>
                                        <div class="col-md-10">
                                            @*@Html.TextBoxFor(m => m.problemLog.notes, new { @class = "form-control" })*@
                                            @Html.TextBoxFor(m => m.routine.endDate, "dd/mm/yyyy", new { @class = "form-control date-picker", @data_date_format = "dd/mm/yyyy", id = "datetimepicker2" })
                                            <span style="display: none; color:red;" id="endDateError"></span>

                                            <br />
                                        </div>
                                    </div>
                                </td>

                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            <i class="required"></i>
                                            Start Time
                                        </label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(m => m.routine.startTime, new { @class = "form-control", @id = "startTime", required = "required" })

                                            <br />
                                        </div>
                                    </div>
                                </td>

                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            <i class="required"></i>
                                            End Time
                                        </label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(m => m.routine.endTime, new { @class = "form-control", @id = "endTime", required = "required" })

                                            <br />
                                        </div>
                                    </div>
                                </td>

                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">Concerning Issues (If any)</label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(m => m.routine.concerningIssues, new { @class = "form-control" })

                                            <br />
                                        </div>
                                    </div>
                                </td>

                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            <i class="required"></i>
                                            Notes
                                        </label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(m => m.routine.notes, new { @class = "form-control", required = "required" })

                                            <br />
                                        </div>
                                    </div>
                                </td>

                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            <i class="required"></i>
                                            Included/Excluded
                                        </label>
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(x => x.routine.includeInSchedule, new List<SelectListItem>
                                                    {
                                                          new SelectListItem() {Text = "Include", Value="1"},
                                                          new SelectListItem() {Text = "Exclude", Value="0"},


                                                    }, new { @class = "form-control", id = "schedCheck" })

                                            <br />
                                        </div>
                                    </div>


                                    <div class="form-group" id="reasons" style="display:none">
                                        <label class="col-md-10 control-label">
                                            <i class="required"></i>
                                            Reason for Exclusion
                                        </label>
                                        <div class="col-md-10">

                                            @Html.TextBoxFor(m => m.routine.reasonForExclude, new { @class = "form-control" })

                                            <br />
                                        </div>
                                    </div>
                                </td>

                            </tr>
                        </tbody>
                    </table>

                </div>

                <div class="modal-footer">
                    <div class="text-center">
                        <button type="submit" class="btn btn-primary space" id="add">Add</button>
                        <button type="button" class="btn btn-default space" data-dismiss="modal">Close</button>
                    </div>
                </div>
            }
        </div>

    </div>

</div>

<div id="EditModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            @using (Html.BeginForm("EditRoutine", "Supervisor", FormMethod.Post, new { @role = "form", @id = "form1" }))
            {
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>

                    <h4 class="modal-title" id="modal-title">Edit Routine</h4>

                </div>

                <div class="modal-body" id="table-body">
                    @Html.HiddenFor(m => m.routine.includeInSchedule, new { @id = "schedCheck1" })
                    @Html.HiddenFor(m => m.patient.patientID, new { @Value = @Model.patient.patientID, @id = "ab" })
                    <div id="hidden"></div>
                    <table>
                        <thead>
                        </thead>
                        <tbody class="table">
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">Event Name</label>
                                        <div class="col-md-10">

                                            @Html.DropDownListFor(m => m.routine.centreActivityID, new SelectList(Model.activityList, "centreActivityID", "activityTitle"), new { @class = "form-control", @id = "activityCheck1" })

                                            <br />
                                        </div>
                                    </div>

                                    <div class="form-group" id="activityOther1" style="display:none">
                                        <label class="col-md-10 control-label">
                                            <i class="required"></i>
                                            Other Event
                                        </label>
                                        <div class="col-md-10">

                                            @Html.TextBoxFor(m => m.routine.eventName, new { @class = "form-control", id = "otherEvent" })

                                            <br />
                                        </div>
                                    </div>
                                </td>

                            </tr>


                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            <i class="required"></i>
                                            Day
                                        </label>
                                        <div class="col-md-10">


                                            @Html.DropDownListFor(x => x.routine.day, new List<SelectListItem>
                                                 {
                                                       new SelectListItem() {Text = "Everyday", Value="Everyday"},
                                                       new SelectListItem() {Text = "Monday", Value="Monday"},
                                                       new SelectListItem() {Text = "Tuesday", Value="Tuesday"},
                                                       new SelectListItem() {Text = "Wednesday", Value="Wednesday"},
                                                       new SelectListItem() {Text = "Thursday", Value="Thursday"},
                                                       new SelectListItem() {Text = "Friday", Value="Friday"}

                                                 }, new { @class = "form-control", id = "dayCheck1" })

                                            <br />
                                        </div>
                                    </div>


                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            <i class="required"></i>
                                            Start Date
                                        </label>
                                        <div class="col-md-10">
                                            <div id="startDate"></div>

                                            <br />
                                        </div>
                                    </div>
                                </td>

                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            <i class="required"></i>
                                            End Date
                                        </label>
                                        <div class="col-md-10">
                                            <div id="endDate"></div>

                                            <br />
                                        </div>
                                    </div>
                                </td>

                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            <i class="required"></i>
                                            Start Time
                                        </label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(m => m.routine.startTime, new { @class = "form-control", @id = "startTime1", required = "required" })

                                            <br />
                                        </div>
                                    </div>
                                </td>

                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            <i class="required"></i>
                                            End Time
                                        </label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(m => m.routine.endTime, new { @class = "form-control", @id = "endTime1", required = "required" })

                                            <br />
                                        </div>
                                    </div>
                                </td>

                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">Concerning Issues (If any)</label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(m => m.routine.concerningIssues, new { @class = "form-control", id = "issues" })

                                            <br />
                                        </div>
                                    </div>
                                </td>

                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            <i class="required"></i>
                                            Notes
                                        </label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(m => m.routine.notes, new { @class = "form-control", id = "notes", required = "required" })

                                            <br />
                                        </div>
                                    </div>
                                </td>

                            </tr>

                        </tbody>
                    </table>

                </div>

                <div class="modal-footer">
                    <div class="text-center">
                        <button type="submit" class="btn btn-primary space">Save Changes</button>
                        <button type="button" class="btn btn-default space" data-dismiss="modal">Close</button>
                    </div>
                </div>
            }
        </div>

    </div>

</div>


<div id="ExcludeModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            @using (Html.BeginForm("ExcludeRoutine", "Supervisor", FormMethod.Post, new { @role = "form", @id = "form1" }))
            {
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title" id="modal-title">Are you sure you want to exclude this routine?</h4>
                </div>
                <div class="modal-body" id="table-body">
                    <input type="hidden" id="hiddenRoutineID" name="hiddenRoutineID">
                    @Html.HiddenFor(m => m.patient.patientID, new { @Value = @Model.patient.patientID, @id = "ab" })

                    <h4>Reason for exclusion:</h4>
                    @Html.TextBoxFor(m => m.routine.reasonForExclude, new { @class = "form-control", id = "reasonVal" })

                </div>
                <div class="modal-footer">
                    <div class="text-center">
                        <button type="submit" class="btn btn-primary space">Ok</button>
                        <button type="button" class="btn btn-default space" data-dismiss="modal">Cancel</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>


<script src="~/Content/global/plugins/jquery.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/js.cookie.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/jquery-slimscroll/jquery.slimscroll.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/jquery.blockui.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/bootstrap-switch/js/bootstrap-switch.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/bootstrap-fileinput/bootstrap-fileinput.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/jquery.sparkline.min.js" type="text/javascript"></script>
<script src="~/Content/global/scripts/app.min.js" type="text/javascript"></script>



<link href="~/Content/global/plugins/jquery-ui/jquery-ui.min.css" rel="stylesheet" type="text/css" />
<script src="~/Content/global/plugins/jquery-ui/jquery-ui.min.js" type="text/javascript"></script>

<script src="~/Content/global/plugins/bootstrap-datepicker/js/bootstrap-datepicker.min.js" type="text/javascript"></script>


<link rel="stylesheet" href="~/Content/global/css/jquery.timepicker.css" type="text/css" />
<script src="~/Content/global/scripts/jquery.timepicker.js" type="text/javascript"></script>

@*DataTable*@
<link href="~/Content/global/plugins/datatables/datatables.min.css" rel="stylesheet" type="text/css" />
<link href="~/Content/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.css" rel="stylesheet" type="text/css" />
<script src="~/Content/global/plugins/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
<script src="~/Content/global/scripts/datatable.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/datatables/datatables.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.js" type="text/javascript"></script>
<link href="~/Content/global/plugins/bootstrap/css/custom.css" rel="stylesheet" type="text/css">
<script src="~/Content/global/plugins/datatables/date-uk.js" type="text/javascript"></script>

<script src="~/Content/pages/scripts/table-datatables-responsive.min.js" type="text/javascript"></script>
<script src="~/Content/global/scripts/moment.min.js" type="text/javascript"></script>
<script src="~/Content/global/scripts/datetime-moment.js" type="text/javascript"></script>


@*Input Checks*@
<script src="~/Content/global/scripts/inputChecks.js" type="text/javascript"></script>


<script>
    $(document).ready(function () {
        routineCheck();

        $('#sample_3').DataTable().destroy();
        $('#sample_3').DataTable({
            columnDefs: [
                { type: 'date-uk', targets: 4 }
                ],
                "order": [[4, "asc"]]
        });

        $('#sample_4').DataTable().destroy();
        $('#sample_4').DataTable({
            columnDefs: [
            { type: 'date-uk', targets: 4 }
                ],
            "order": [[4, "asc"]]
        });

        $("a[data-toggle='pill']").on("shown.bs.tab", function (e) {
            $($.fn.dataTable.tables(true)).DataTable().columns.adjust().draw();
        });


        $(document).delegate('.excludePrompt', 'click', function () {
            $("#ExcludeModal").modal("show");

            routineID = $(this).attr('value');
            $("#hiddenRoutineID").val(routineID);
            console.log(routineID);

        });


        $('#create').click(function () {
            $("#CreateModal").modal('show');

            $('#datetimepicker1').datepicker({
                defaultDate: null,
            });
            $('#datetimepicker2').datepicker({
                defaultDate: null,
            });


            $('#startTime').timepicker({
                'timeFormat': 'H:i:s',
                'minTime': '09:00:00',
                'maxTime': '16:30:00',
                'showDuration': false,
            });

            $('#endTime').timepicker({
                'timeFormat': 'H:i:s',
                'minTime': '09:00:00',
                'maxTime': '16:30:00',
                'showDuration': false
            });

            //Check if activity is Others
            //$("#activityCheck").change(function () {
            //    var val = document.getElementById('activityCheck').value;
            //    var element = document.getElementById('activityOther');
            //    if (val == -1)
            //        element.style.display = 'block';
            //    else
            //        element.style.display = 'none';

            //});


            $("#schedCheck").change(function () {
                var val = document.getElementById('schedCheck').value;
                var element = document.getElementById('reasons');
                if (val == "0")
                    element.style.display = 'block';
                else
                    element.style.display = 'none';

            });




        });


        $('#datetimepicker1').change(function () {

            var datetimepicker1Val = $('#datetimepicker1').val();
            var datetimepicker2Val = $('#datetimepicker2').val();

            dateCheck(datetimepicker1Val, datetimepicker2Val);
        });

        $('#datetimepicker2').change(function () {

            var datetimepicker1Val = $('#datetimepicker1').val();
            var datetimepicker2Val = $('#datetimepicker2').val();

            dateCheck(datetimepicker1Val, datetimepicker2Val);
        });

        $(document).delegate('.btn.btn-primary.space.edit', 'click', function () {
            $("#EditModal").modal('show');
            $('#startTime1').timepicker({
                'timeFormat': 'H:i:s',
                'minTime': '09:00:00',
                'maxTime': '16:30:00',
                'showDuration': false,
            });

            $('#endTime1').timepicker({
                'timeFormat': 'H:i:s',
                'minTime': '09:00:00',
                'maxTime': '16:30:00',
                'showDuration': false
            });



            //$("#activityCheck1").change(function () {
            //    var val = document.getElementById('activityCheck1').value;
            //    var element = document.getElementById('activityOther1');
            //    if (val == -1)
            //        element.style.display = 'block';
            //    else
            //        element.style.display = 'none';

            //});


            $("#schedCheck1").change(function () {
                var val = document.getElementById('schedCheck1').value;
                var element = document.getElementById('reasons1');
                if (val == "0")
                    element.style.display = 'block';
                else
                    element.style.display = 'none';
            });

            $.ajax({
                type: 'POST',
                dataType: 'json',
                data: {
                    id: $(this).attr('id'),
                },
                url: '@Url.Action("GetRoutineDetails", "Supervisor")',
                success: function (result) {
                console.log(result);
                $("#hidden").empty();
                $("#startDate").empty();
                $("#endDate").empty();


                $("#hidden").append("<input type='hidden' name='routineID' value='" + result.routineID+"' />");

                $("#notes").val(result.notes);


                var element = document.getElementById('activityOther1');


                $("#dayCheck1").val(result.day);

                if (result.CentreActivity != null) {
                //$("activityCheck1").val(result.CentreActivity.centreActivityID);
                document.getElementById('activityCheck1').value = result.CentreActivity.centreActivityID;

                element.style.display = 'none';

                } else {
                document.getElementById('activityCheck1').value = -1;
                element.style.display = 'block';
                $("#otherEvent").val(result.eventName);
                }


                $("#issues").val(result.concerningIssues);

                var hours = result.startTime.Hours;
                if (hours < 10) {
                hours = '0' + hours;
                }

                var min = result.startTime.Minutes;

                if (min < 10) {
                min = '0' + min;
                }
                var sec = result.startTime.Seconds;
                var ms = result.startTime.Milliseconds;
                $("#startTime1").val(hours+":"+min+":"+sec+ms);

                var hours = result.endTime.Hours;
                if (hours < 10) {
                hours = '0' + hours;
                }

                var min = result.endTime.Minutes;

                if (min < 10) {
                min = '0' + min;
                }
                var sec = result.endTime.Seconds;
                var ms = result.endTime.Milliseconds;
                $("#endTime1").val(hours + ":" + min + ":" + sec + ms);

                var datetime = new Date(parseInt(result.startDate.substr(6)));
                var dd = datetime.getDate();
                var mm = datetime.getMonth() + 1; //January is 0!

                var yyyy = datetime.getFullYear();
                if (dd < 10) {
                dd = '0' + dd;
                }
                if (mm < 10) {
                mm = '0' + mm;
                }
                var startdate = dd + '/' + mm + '/' + yyyy;


                $("#startDate").append("<input type='text' class='form-control date-picker' id='datepicker1' data-date-format='dd/mm/yyyy' name='startDate' value='" + startdate + "' />");


                var datetime = new Date(parseInt(result.endDate.substr(6)));
                var dd = datetime.getDate();
                var mm = datetime.getMonth() + 1; //January is 0!

                var yyyy = datetime.getFullYear();
                if (dd < 10) {
                dd = '0' + dd;
                }
                if (mm < 10) {
                mm = '0' + mm;
                }


                var enddate = dd + '/' + mm + '/' + yyyy;


                $("#endDate").append("<input type='text' class='form-control date-picker' id='datepicker2' data-date-format='dd/mm/yyyy' name='endDate' value='" +enddate + "' />");


                $('#datepicker1').datepicker({
                defaultDate: null,
                });
                $('#datepicker2').datepicker({
                defaultDate: null,
                });


                }
                });

                });

                $('#add').click(function () {
                var errorFlag = 0;

                //dayCheck
                var dayCheckVal = $("#dayCheck").val();
                if (dayCheckVal == null) {
                document.getElementById("dayCheckError").innerHTML = "Select at least one option.";
                document.getElementById("dayCheckError").style.display = "block";
                errorFlag = 1;
                }

                //otherActivityNameCheck
                    var activityCheckVal = $('#activityCheck').val();
                    var otherEventName = $('#otherEventName').val();

                    if (activityCheckVal == -1 && otherEventName == "") {
                        errorFlag = 1;
                    }
                    var activityCheck1Val = $('#activityCheck1').val();
                    var otherEvent1Name = $('#otherEvent').val();

                    if (activityCheck1Val == -1 && otherEvent1Name == "") {
                        errorFlag = 1;
                    }

                //dateCheck
                var datetimepicker1Val = $('#datetimepicker1').val();
                var datetimepicker2Val = $('#datetimepicker2').val();

               var errorFlag = dateCheck(datetimepicker1Val, datetimepicker2Val);

                    if (errorFlag == 1) {
                        return false;
                    } else {
                        return true;
                    }
                });


                function dateCheck(datetimepicker1Val, datetimepicker2Val) {
                var errorFlag = 0;

                var datetime = new Date();
                var dd = datetime.getDate();
                var mm = datetime.getMonth() + 1; //January is 0!

                var yyyy = datetime.getFullYear();
                if (dd < 10) {
                dd = '0' + dd;
                }
                if (mm < 10) {
                mm = '0' + mm;
                }
                var d = dd + '/' + mm + '/' + yyyy;


                var arrStartDate = datetimepicker1Val.split("/");
                var stdate = new Date(arrStartDate[2], arrStartDate[1], arrStartDate[0]);

                var arrEndDate = datetimepicker2Val.split("/");
                var enddate = new Date(arrEndDate[2], arrEndDate[1], arrEndDate[0]);


                var arrCrDate = d.split("/");
                var tdate = new Date(arrCrDate[2], arrCrDate[1], arrCrDate[0]);

                if (stdate < tdate) {
                document.getElementById("startDateError").innerHTML = "Start date cannot be before today.";
                document.getElementById("startDateError").style.display = "block";
                errorFlag = 1;

                } else {
                document.getElementById("startDateError").innerHTML = "";
                document.getElementById("startDateError").style.display = "none";
                }

                if (stdate.toDateString() == enddate.toDateString() && enddate != "") {
                document.getElementById("startDateError2").innerHTML = "Start date and end date cannot be on the same day.";
                document.getElementById("startDateError2").style.display = "block";
                errorFlag = 1;
                } else {
                document.getElementById("startDateError2").innerHTML = "";
                document.getElementById("startDateError2").style.display = "none";
                }

                if (stdate > enddate && enddate != "") {
                document.getElementById("startDateError1").innerHTML = "Start date cannot be after end date.";
                document.getElementById("startDateError1").style.display = "block";
                errorFlag = 1;

                } else {
                document.getElementById("startDateError1").innerHTML = "";
                document.getElementById("startDateError1").style.display = "none";
                }


                if (enddate < tdate && stdate != "") {
                document.getElementById("endDateError").innerHTML = "End date cannot be before today.";
                document.getElementById("endDateError").style.display = "block";
                errorFlag = 1;

                } else {
                document.getElementById("endDateError").innerHTML = "";
                document.getElementById("endDateError").style.display = "none";
                }

                    return errorFlag;

                }

                });
                </script>

