@model NTU_FYP_REBUILD_17.ViewModels.AttendanceLogViewModel
@using NTU_FYP_REBUILD_17.Models

@{
    ViewBag.Title = "ManageProblemLog";
    Layout = "~/Views/Shared/_LayoutSupervisor.cshtml";
}

@{
    int ID = 0;
}


<div class="portlet box blue-madison">
    <div class="portlet-title">
        <div class="caption" id="pageTitle">
            <i class="fa fa-folder-open-o"></i>
            Attendance For @Model.firstDayOfWeek.ToString("dd/MM/yyyy") - @Model.lastDayOfWeek.ToString("dd/MM/yyyy")
        </div>
        <div class="tools"> </div>
    </div>

    <div class="portlet-body">
        <div class="tab-content">
            <div class="tab-pane active">
                @if (TempData["success"] != null)
                {
                    <div class="alert alert-success text-center" role="alert">@TempData["success"]</div>
                }

                @if (TempData["error"] != null)
                {
                    <div class="alert alert-danger  text-center" role="alert">@Html.Raw(TempData["error"])</div>
                }

                @using (Html.BeginForm("FilterAttendanceByWeek", "Supervisor", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "form1", @required="required" }))
                {
                    @Html.HiddenFor(x => x.startDate, new { @name = "startDate", @id = "firstDayOfWeek" })
                    @Html.HiddenFor(x => x.endDate, new { @name = "endDate", @id = "lastDayOfWeek" })

                    <div class="form-group col-md-3 " id="week-picker-wrapper">
                        <label for="week" class="control-label">Filter by Week</label>
                        <div class="input-group">
                            <input type="text" class="form-control week-picker" placeholder="Select a Week" name="">

                            <span class="input-group-btn">
                                <button type="submit" class="btn">Go</button>
                            </span>
                        </div>
                    </div>
                }
                <br /><br /><br /> <br />


                <table class="table table-striped table-bordered table-hover dt-responsive compact" id="sample_3" cellspacing="0">

                    <thead>
                        <tr>
                            <th class="min-tablet " rowspan="2">Name</th>

                            @foreach (var days in Model.weekdays)
                            {
                                <th class="desktop4" colspan="3">@days</th>

                            }
                        </tr>
                        <tr>
                            @foreach (var days in Model.weekdays)
                            {
                                <th class="desktop4" width="10%">Arrive</th>
                                <th class="desktop4" width="10%">Depart</th>
                                <th class="desktop4" width="10%"></th>
                            }
                        </tr>

                    </thead>

                    <tbody>

                        @{ var item = Model.patientAttendances;
                            int count = 0; }


                        @for (int x = 0; x < item.Count();)
                        {

                            if (count == 0 || count % Model.weekdays.Count() == 0)
                            {

                                @Html.Raw("<tr>");
                                @Html.Raw("<td>" + item[x].patient.firstName + " " + item[x].patient.lastName + "</td>")

                            }

                            for (int i = 0; i < Model.weekdays.Count(); i++)
                            {

                                if (x == item.Count())
                                {
                                    while (i < Model.weekdays.Count())
                                    {
                                        @Html.Raw("<td> </td>")
                                        @Html.Raw("<td> </td>")
                                        @Html.Raw("<td> </td>")
                                        i++;
                                    }
                                    @Html.Raw("</tr>");
                                    break;
                                }


                                if (item[x].attendance.dayOfWeek == Model.weekdays[i])
                                {

                                    @Html.Raw("<td>" + item[x].attendance.arrivalTime + "</td>")
                                    @Html.Raw("<td>" + item[x].attendance.departureTime + "</td>")

                                    if (item[x].attendance.arrivalTime != null)
                                    {
                                        @Html.Raw("<td><button id='" + @item[x].attendance.attendanceLogID + "' pID='" + @item[x].patient.patientID + "' class='btn btn-success btn-xs space editAtt' type='submit'><i class='fa fa-check'></i></button></td>");

                                    }
                                    else
                                    {
                                        @Html.Raw("<td><button id='" + @item[x].attendance.attendanceLogID + "' pID='" + item[x].patient.patientID + "' class='btn btn-primary btn-xs space editAtt' type='submit'><i class='fa fa-check'></i></button></td>");

                                    }
                                    count++;
                                    x++;



                                }

                                else
                                {
                                    @Html.Raw("<td> </td>")
                                    @Html.Raw("<td> </td>")
                                    @Html.Raw("<td> </td>")

                                    count++;

                                    if (i == Model.weekdays.Count() - 1)
                                    {
                                        x++;
                                    }

                                }

                            }




                            if (count == 0 || count % Model.weekdays.Count() == 0)
                            {
                                @Html.Raw("</tr>");

                            }

                        }





                    </tbody>



                </table>
                <br /><br />

                <div class="margiv-top-10 margin-bottom-10 pull-right">
                    @*<button id="create" class="btn btn-primary space" type="submit">Create</button>*@

                    <input class="btn grey" type="button" onclick="window.location.replace('@Url.Action("ManagePatient", "Supervisor")')" value="Cancel" />
                </div>
                <br /><br />


            </div>
        </div>
    </div>
</div>

@* Edit *@
<div id="EditModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            @using (Html.BeginForm("EditAttendanceLog", "Supervisor", FormMethod.Post, new { @role = "form", @id = "form1" }))
            {
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>

                    <h4 class="modal-title" id="modal-title">Edit Patient's Prescription</h4>

                </div>

                <div class="modal-body" id="table-body">

                    <div id="hidden">
                    </div>
                    <div id="hidden1">
                    </div>

                    <table>
                        <thead>
                        </thead>
                        <tbody class="table">

                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">Patient Name</label>

                                        <div class="col-md-10">
                                            @Html.TextBoxFor(m => m.patientName, new { @class = "form-control", id = "patientName", @readonly = "readonly" })

                                            <br />
                                        </div>
                                    </div>
                                </td>

                            </tr>

                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            Attendance Date
                                        </label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(m => m.attendanceInput.attendanceDate, new { @class = "form-control", id = "attDate", @readonly = "readonly" })
                                            <br />
                                        </div>
                                    </div>
                                </td>
                            </tr>

                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            Day
                                        </label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(m => m.attendanceInput.attendanceDate, new { @class = "form-control", id = "attDay", @readonly = "readonly" })
                                            <br />
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            Arrival Time
                                        </label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(m => m.attendanceInput.arrivalTime, new { @class = "form-control", @id = "arrTime", @placeholder = "09:00" })
                                            <br />
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <div class="form-group">
                                        <label class="col-md-10 control-label">
                                            Departure Time
                                        </label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(m => m.attendanceInput.departureTime, new { @class = "form-control", @id = "depTime", @placeholder = "09:00" })
                                            <br />
                                        </div>

                                    </div>
                                </td>
                            </tr>

                        </tbody>
                    </table>

                </div>

                <div class="modal-footer">
                    <div class="text-center">
                        <button type="submit" class="btn btn-primary space">Save Changes</button>
                        <button type="button" class="btn btn-default space" data-dismiss="modal">Close</button>
                    </div>
                </div>
            }
        </div>

    </div>

</div>

@*DataTable*@
<link href="~/Content/global/plugins/datatables/datatables.min.css" rel="stylesheet" type="text/css" />
<link href="~/Content/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.css" rel="stylesheet" type="text/css" />
<script src="~/Content/global/plugins/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
<script src="~/Content/global/scripts/datatable.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/datatables/datatables.min.js" type="text/javascript"></script>
<script src="~/Content/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.js" type="text/javascript"></script>
<link href="~/Content/global/plugins/bootstrap/css/custom.css" rel="stylesheet" type="text/css">

<script src="~/Content/pages/scripts/table-datatables-responsive.min.js" type="text/javascript"></script>
<script src="~/Content/global/scripts/moment.min.js" type="text/javascript"></script>
<script src="~/Content/global/scripts/datetime-moment.js" type="text/javascript"></script>


@*Timepicker*@
<link rel="stylesheet" href="~/Content/global/css/jquery.timepicker.css" type="text/css" />
<script src="~/Content/global/scripts/jquery.timepicker.js" type="text/javascript"></script>


<link href="~/Content/global/plugins/jquery-ui/jquery-ui.min.css" rel="stylesheet" type="text/css" />
<script src="~/Content/global/plugins/jquery-ui/jquery-ui.min.js" type="text/javascript"></script>

@*<script src="~/Content/global/plugins/bootstrap-datepicker/js/bootstrap-datepicker.min.js" type="text/javascript"></script>
<script src="~/Content/global/scripts/wickedpicker.js" type="text/javascript"></script>
<link href="~/Content/global/css/wickedpicker.min.css" rel="stylesheet" type="text/css">*@

@* Datepicker *@
<script src="~/Content/global/plugins/bootstrap-datepicker/js/bootstrap-datepicker.min.js" type="text/javascript"></script>

<style>
    .datepicker table tr td span.active {
        background: #04c !important;
        border-color: #04c !important;
    }

    .datepicker .datepicker-days tr td.active {
        background: #04c !important;
    }

    #week-picker-wrapper .datepicker .datepicker-days tr td.active ~ td, #week-picker-wrapper .datepicker .datepicker-days tr td.active {
        color: #fff;
        background-color: #04c;
        border-radius: 0;
    }

    #week-picker-wrapper .datepicker .datepicker-days tr:hover td, #week-picker-wrapper .datepicker table tr td.day:hover, #week-picker-wrapper .datepicker table tr td.focused {
        color: #000 !important;
        background: #e5e2e3 !important;
        border-radius: 0 !important;
    }
</style>

<script>
    $(document).ready(function () {
        $('#sample_3').DataTable().destroy();
        $('#sample_3').DataTable({
            order: [[0, "asc"]],

        });


        var weekpicker, start_date, end_date;

        function set_week_picker(date) {
            start_date = new Date(date.getFullYear(), date.getMonth(), date.getDate() - date.getDay());
            end_date = new Date(date.getFullYear(), date.getMonth(), date.getDate() - date.getDay() + 4);
            weekpicker.datepicker('update', start_date);

            //startDate
            var dd = start_date.getDate() +1;
            var mm = start_date.getMonth() +1 ; //January is 0!

            var yyyy = start_date.getFullYear();
            if (dd < 10) {
                dd = '0' + dd;
            }
            if (mm < 10) {
                mm = '0' + mm;
            }
            var startDate= dd + '/' + mm + '/' + yyyy;

            //endDate
            var edd = end_date.getDate() + 1;
            var emm = end_date.getMonth() + 1; //January is 0!

            var eyyyy = end_date.getFullYear();
            if (edd < 10) {
                edd = '0' + edd;
            }
            if (emm < 10) {
                emm = '0' + emm;
            }
            var endDate = edd + '/' + emm + '/' + eyyyy;

            weekpicker.val(startDate + ' - ' + endDate);

            //weekpicker.val((start_date.getDate() + 1) + '/' + start_date.getMonth() + '/' + start_date.getFullYear() + ' - ' + (end_date.getDate() + 1) + '/' + end_date.getMonth() + '/' + end_date.getFullYear());

            $("#firstDayOfWeek").val(startDate);
            $("#lastDayOfWeek").val(endDate);

        }
            weekpicker = $('.week-picker');
            console.log(weekpicker);
            weekpicker.datepicker({
                autoclose: true,
                forceParse: false,
                container: '#week-picker-wrapper',
            }).on("changeDate", function (e) {
                set_week_picker(e.date);
            });
            $('.week-prev').on('click', function () {
                var prev = new Date(start_date.getTime());
                prev.setDate(prev.getDate() - 1);
                set_week_picker(prev);
            });
            $('.week-next').on('click', function () {
                var next = new Date(end_date.getTime());
                next.setDate(next.getDate() + 1);
                set_week_picker(next);
            });
            set_week_picker(new Date);

        
        //filter
        @*var head = $("#sample_3").find('thead');
        var table = $("#sample_3").find('tbody');

        $(document).delegate('.dayFilter', 'change', function () {
            var filterDate = $(this).val();
            $.ajax({
                type: 'POST',
                dataType: 'json',
                data: {
                    day: filterDate
                },
                url: '@Url.Action("GetAttendanceByDay", "Supervisor")',
                success: function (result) {
                    head.empty();
                    table.empty();

                    $("#pageTitle").text("Attendance For " + filterDate);

                    head.append("<tr><th>Name</th>" +
                        "<th>Attendance Date</th>" +
                        "<th>Day</th>" +
                        "<th>Arrival Time</th>" +
                        "<th>Departure Time</th>" +
                        "<th> </th></tr>");



                    for (var i = 0; i < result.patientAttendances.length; i++) {

                        var datetime = new Date(parseInt(result.patientAttendances[i].attendance.attendanceDate.substr(6)));
                        var dd = datetime.getDate();
                        var mm = datetime.getMonth() + 1; //January is 0!

                        var yyyy = datetime.getFullYear();
                        if (dd < 10) {
                            dd = '0' + dd;
                        }
                        if (mm < 10) {
                            mm = '0' + mm;
                        }
                        var attDate = dd + '/' + mm + '/' + yyyy;


                        var arrTimeDisplay = "";
                        if (result.patientAttendances[i].attendance.arrivalTime != null) {
                            arrTime = result.patientAttendances[i].attendance.arrivalTime;

                            var hours = arrTime.Hours;
                            if (hours < 10) {
                                hours = '0' + hours;
                            }

                            var min = arrTime.Minutes;

                            if (min < 10) {
                                min = '0' + min;
                            }
                            var sec = arrTime.Seconds;
                            var ms = arrTime.Milliseconds;

                            arrTimeDisplay = hours + ":" + min + ":" + sec + ms;
                        }


                        var depTimeDisplay = "";
                        if (result.patientAttendances[i].attendance.departureTime != null) {
                            depTime = result.patientAttendances[i].attendance.departureTime;

                            var hours = depTime.Hours;
                            if (hours < 10) {
                                hours = '0' + hours;
                            }

                            var min = depTime.Minutes;

                            if (min < 10) {
                                min = '0' + min;
                            }
                            var sec = depTime.Seconds;
                            var ms = depTime.Milliseconds;

                            depTimeDisplay = hours + ":" + min + ":" + sec + ms;

                        }
                        var patientName = result.patientAttendances[i].patient.firstName + " " + result.patientAttendances[i].patient.lastName;

                        var button = "";
                        if (result.patientAttendances[i].attendance.arrivalTime != null)
                                {
                             button = '<td>' +
                                 '<button id="' + result.patientAttendances[i].attendance.attendanceLogID + '" pID="' + result.patientAttendances[i].patient.patientID+'" class="btn btn-success btn-sm space editAtt" type="submit"><i class="fa fa-check"></i></button>'
                                 + '</td>';
                                }
                                else
                                {
                             button = '<td>' +
                                        '<button id="' + result.patientAttendances[i].attendance.attendanceLogID + '" pID="' + result.patientAttendances[i].patient.patientID+'" class="btn btn-primary btn-sm space editAtt" type="submit"><i class="fa fa-check"></i></button>'
                                 + '</td>';
                                }

                        table.append("<tr><td>"+ patientName +"</td>" +
                            "<td>" + attDate + "</td>" +
                            "<td>" + result.patientAttendances[i].attendance.dayOfWeek+ "</td>" +
                            "<td>" + arrTimeDisplay + "</td>" +
                            "<td>" + depTimeDisplay + "</td>" +
                            button+"</tr>");
                    }
                }
            });
        });*@

        //edit
        $(document).delegate('.editAtt', 'click', function () {
            $("#EditModal").modal('show');
            var attID = $(this).attr('id');
            var patientID = $(this).attr('pID');

            $.ajax({
                type: 'POST',
                dataType: 'json',
                data: {
                    attID: attID,
                    patientID: patientID,
                },
                url: '@Url.Action("GetAttendanceDetails", "Supervisor")',
                success: function (result) {
                    $("#hidden").empty();
                    $("#hidden1").empty();


                    $("#hidden").append("<input type='hidden' name='patientID' value='" + result.patient.patientID + "'/>");
                    $("#hidden1").append("<input type='hidden' name='attendanceLogID' value='" + result.attendanceInput.attendanceLogID + "'/>");


                    $("#patientName").val(result.patient.firstName + ' ' + result.patient.lastName);

                    var datetime = new Date(parseInt(result.attendanceInput.attendanceDate.substr(6)));
                    var dd = datetime.getDate();
                    var mm = datetime.getMonth() + 1; //January is 0!

                    var yyyy = datetime.getFullYear();
                    if (dd < 10) {
                        dd = '0' + dd;
                    }
                    if (mm < 10) {
                        mm = '0' + mm;
                    }
                    var attDate = dd + '/' + mm + '/' + yyyy;

                    $("#attDate").val(attDate);

                    $("#attDay").val(result.attendanceInput.dayOfWeek);


                    //Arr Taken
                    if (result.attendanceInput.arrivalTime != null) {
                        var hours = result.attendanceInput.arrivalTime.Hours;
                        if (hours < 10) {
                            hours = '0' + hours;
                        }

                        var min = result.attendanceInput.arrivalTime.Minutes;

                        if (min < 10) {
                            min = '0' + min;
                        }


                        //$("#arrTime").wickedpicker({ twentyFour: true, timeSeparator: ':', now: hours + ":" + min });
                        $("#arrTime").val(hours + ":" + min);
                    }
                    //else {
                    //    //$("#arrTime").wickedpicker();

                    //}

                    //Departure Taken
                    if (result.attendanceInput.depatureTime != null) {
                        var hours = result.attendanceInput.depatureTime.Hours;
                        if (hours < 10) {
                            hours = '0' + hours;
                        }

                        var min = result.attendanceInput.depatureTime.Minutes;

                        if (min < 10) {
                            min = '0' + min;
                        }


                        //$("#depTime").wickedpicker({ twentyFour: true, timeSeparator: ':', now: hours + ":" + min });
                        $("#depTime").val(hours + ":" + min);
                    }

                    //else {
                    //    //$("#depTime").wickedpicker();

                    //}

                    }

            });


        });

    });
</script>

