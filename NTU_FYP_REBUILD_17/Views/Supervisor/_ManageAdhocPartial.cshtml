@using Microsoft.AspNet.Identity
@using NTU_FYP_REBUILD_17.Models
@model NTU_FYP_REBUILD_17.ViewModels.ManageSupervisorsViewModel


    @Html.HiddenFor(p => p.id, new { @Value = @Model.CentreActivities.centreActivityID, @id = "ab" })

    <div class="table-repsonsive">
        <span id="error"></span>

        @*<p><b>Start Date: </b><input name="startDate" type="text" id="startDate"> &nbsp; &nbsp; <b>End Date: </b><input name="endDate" type="text" id="endDate"></p>*@
        <table class="table table-striped table-bordered table-hover dt-responsive" width="100%" id="sample_3" cellspacing="0">
            <thead>
                <tr>
                    <th class="min-tablet">Patient ID</th>
                    <th class="desktop4">First Name</th>
                    <th class="desktop4">Last Name</th>
                    <th class="desktop4">NRIC</th>
                    <th class="desktop4"></th>
                    <th data-orderable="false">
                        &nbsp;
                        <label class="mt-checkbox mt-checkbox-single mt-checkbox-outline">
                            <input type="checkbox" class="group-checkable" id="checkAll" data-set="#sample_3 .checkboxes" />
                            <span></span>
                        </label>
                        <a href="#" data-toggle="tooltip" title="For Selected Activity Change Button"><span class="fa fa-info-circle"></span></a>
                    </th>
                </tr>
            </thead>
            <tbody>


                @for (int i = 0; i < Model.adhocPatientList.Count; i++)
                {
                    @Html.HiddenFor(p => p.adhocPatientList[i].patientID, new { @Value = @Model.adhocPatientList[i].patientID, @id = "ab" });
                    @Html.HiddenFor(p => p.adhocPatientList[i].firstName, new { @Value = @Model.adhocPatientList[i].firstName, @id = "ab" });
                    @Html.HiddenFor(p => p.adhocPatientList[i].lastName, new { @Value = @Model.adhocPatientList[i].lastName, @id = "ab" });
                    @Html.HiddenFor(p => p.adhocPatientList[i].nric, new { @Value = @Model.adhocPatientList[i].nric, @id = "ab" });
                    @Html.HiddenFor(p => p.adhocPatientList[i].scheduleID, new { @Value = @Model.adhocPatientList[i].scheduleID, @id = "ab" });

                    <tr>
                        <td>@Model.adhocPatientList[i].patientID</td>
                        <td>@Model.adhocPatientList[i].firstName</td>
                        <td>@Model.adhocPatientList[i].lastName</td>
                        <td>@Model.adhocPatientList[i].nric.Remove(1, 4).Insert(1, "xxxx")</td>
                        <td>@Html.DropDownListFor(model => model.adhocPatientList[i].activityID, new SelectList(Model.ListCentreActivities.OrderBy(x=>x.activityTitle), "centreActivityID", "activityTitle", @Model.CentreActivities.centreActivityID), new { @class = "form-control", @required = "required", @id = "drop" + @Model.adhocPatientList[i].patientID })</td>
                        <td>
                            &nbsp;
                            <label class="mt-checkbox mt-checkbox-single mt-checkbox-outline">
                                <input type="checkbox" class="checkboxes" name="chk" id="chk" value=" @Model.adhocPatientList[i].patientID" />
                                <span></span>
                            </label>
                        </td>
                    </tr>
                }
            </tbody>
            @if (Model.adhocPatientList.Count > 0)
            {
                <tr>
                    <td colspan="6">
                        <div class="col-lg-12">
                            <h4>Log Note:</h4>
                            @Html.TextBoxFor(m => m.logNotes, new { @class = "form-control" })
                        </div>
                    </td>
                </tr>
            }
        </table>

    </div>

    @*@if (Model.adhocPatientList.Count > 0)
    {
        <div class="margiv-top-10">
            <input class="btn grey" type="button" onclick="window.location.replace('@Url.Action("Adhoc", "Supervisor")')" value="Cancel" /> 
            <input type="submit" class="btn blue" value=" Save Changes" />
            <a class="btn dark btn-sm btn-outline sbold uppercase pull-right red" id="btnSelectedActivity">
                <i class="fa fa-exchange"></i> Change Selected Activity
            </a>
            
        </div>
    }*@


<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Change Activities</h4>
            </div>
            <div class="modal-body" id="table-body">
                <table class="col-sm-12 table table-bordered table-striped table-condensed cf">
                    <thead class="cf">
                        <tr>
                            <th class="desktop4">Select a new activity: </th>
                        </tr>
                    </thead>
                    <tbody id="time-schedule">
                        <tr>
                            <td>@Html.DropDownList("ddlDropDownList", new SelectList(Model.ListCentreActivities, "centreActivityID", "activityTitle", @Model.CentreActivities.centreActivityID), new { @class = "form-control", @required = "required", @id = "multipleSelectDropdown" })</td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <input class="btn grey" type="button" onclick="window.location.replace('@Url.Action("Adhoc", "Supervisor")')" value="Cancel" /> 
                <button id="changeBtn" type="button" class="btn btn-default" data-dismiss="modal">Change</button>
            </div>
        </div>

    </div>
</div>



<script>
    var selectedPatient = new Array();

    $(document).ready(function () {


        //$("#startDate").datepicker().datepicker("setDate", new Date());
        //$("#endDate").datepicker().datepicker("setDate", new Date());

        function getDaytoSunday() {
            var current = new Date;
            var first = current.getDate() - current.getDay();
            var first = first + 1
            var last = first + 4;       // + 6 for sunday

            var sunday = new Date(current.setDate(last)).toUTCString();

            var today = new Date();
            var diff = Math.floor((Date.parse(sunday) - Date.parse(today)) / 86400000);

            //console.log("Today: " + today);
            //console.log("Today: " + sunday);
            //console.log("Result: " + diff );

            return "+" + diff + "D";
        }

        //$(function () {
        //    $("#startDate").datepicker({ minDate: -0, maxDate: "+0D", dateFormat: 'yy-mm-dd' }).datepicker("setDate", new Date());
        //});

        //$(function () {
        //    $("#endDate").datepicker({ minDate: -0, maxDate: getDaytoSunday(), dateFormat: 'yy-mm-dd'  }).datepicker("setDate", new Date());
        //});

    });


    $("#checkAll").click(function () {
        if ($("#checkAll").prop('checked')) {
            removeExistingSelectdPatient(this.value);

            $('input:checkbox').not(this).prop('checked', this.checked);

            $('input[name="chk"]:checked').each(function () {
                removeExistingSelectdPatient(this.value);

                selectedPatient.push(this.value);
            });

        } else {
            $('input[name="chk"]:checked').prop('checked', false).each(function () {
                removeExistingSelectdPatient(this.value);

            });
        }
    });

    $('input[name="chk"]').click(function () {

        if ($(this).prop('checked')) {
            removeExistingSelectdPatient(this.value);

            selectedPatient.push(this.value);
        } else {
            removeExistingSelectdPatient(this.value);
        }
    });

    function removeExistingSelectdPatient(patientID) {
        if (!jQuery.isEmptyObject(selectedPatient)) {
            var n = jQuery.inArray(patientID, selectedPatient);
            if (selectedPatient[n] == patientID) {
                selectedPatient.splice(n, 1);
            }
        }
    }

    $("#changeBtn").click(function () {
        $('input[name="chk"]:checked').prop('checked', false).each(function () {
            $('input:checkbox').not(this).prop('checked', this.checked);
            removeExistingSelectdPatient(this.value);
            console.log(this.value);
            var dropdownElement = document.getElementById( "drop" + this.value );
            dropdownElement.value = document.getElementById("multipleSelectDropdown").value;
        });
    });

    $("#btnSelectedActivity").click(function () {

        

        if (!jQuery.isEmptyObject(selectedPatient)) {
            $("#myModal").modal('show');
        }
        else {
            alert('Please select at least one patient !');
        }

    });

    $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip();
    });

</script>
