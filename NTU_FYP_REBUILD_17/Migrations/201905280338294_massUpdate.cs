namespace NTU_FYP_REBUILD_17.Migrations
{
    using System;
    using System.Data.Entity.Migrations;
    
    public partial class massUpdate : DbMigration
    {
        public override void Up()
        {
            DropForeignKey("dbo.activityExclusion", "patientID", "dbo.patient");
            DropForeignKey("dbo.routine", "patientID", "dbo.patient");
            DropForeignKey("dbo.activityPreferences", "patientID", "dbo.patient");
            DropForeignKey("dbo.adHoc", "patientID", "dbo.patient");
            DropForeignKey("dbo.albumPatient", "patientID", "dbo.patient");
            DropForeignKey("dbo.allergy", "patientID", "dbo.patient");
            DropForeignKey("dbo.socialHistory", "patientID", "dbo.patient");
            DropForeignKey("dbo.patientAssignedDementia", "patientID", "dbo.patient");
            DropForeignKey("dbo.prescription", "patientID", "dbo.patient");
            DropForeignKey("dbo.privacySettings", "privacyBitID", "dbo.privacyBit");
            DropForeignKey("dbo.privacySettings", "patientID", "dbo.patient");
            DropForeignKey("dbo.problemLog", "patientID", "dbo.patient");
            DropForeignKey("dbo.vital", "patientID", "dbo.patient");
            DropIndex("dbo.activityExclusion", new[] { "patientID" });
            DropIndex("dbo.routine", new[] { "patientID" });
            DropIndex("dbo.activityPreferences", new[] { "patientID" });
            DropIndex("dbo.adHoc", new[] { "patientID" });
            DropIndex("dbo.albumPatient", new[] { "patientID" });
            DropIndex("dbo.allergy", new[] { "patientID" });
            DropIndex("dbo.socialHistory", new[] { "patientID" });
            DropIndex("dbo.patientAssignedDementia", new[] { "patientID" });
            DropIndex("dbo.prescription", new[] { "patientID" });
            DropIndex("dbo.privacySettings", new[] { "patientID" });
            DropIndex("dbo.privacySettings", new[] { "privacyBitID" });
            DropIndex("dbo.problemLog", new[] { "patientID" });
            DropIndex("dbo.vital", new[] { "patientID" });
            RenameColumn(table: "dbo.personInCharge", name: "userID", newName: "primaryUserID");
            RenameIndex(table: "dbo.personInCharge", name: "IX_userID", newName: "IX_primaryUserID");
            AddColumn("dbo.activityExclusion", "patientAllocationID", c => c.Int(nullable: false));
            AddColumn("dbo.routine", "patientAllocationID", c => c.Int(nullable: false));
            AddColumn("dbo.activityPreferences", "patientAllocationID", c => c.Int(nullable: false));
            AddColumn("dbo.adHoc", "patientAllocationID", c => c.Int(nullable: false));
            AddColumn("dbo.AspNetUsers", "tempUserTypeID", c => c.Int());
            AddColumn("dbo.allergy", "patientAllocationID", c => c.Int(nullable: false));
            AddColumn("dbo.patientAllocation", "tempDoctorID", c => c.Int());
            AddColumn("dbo.patientAllocation", "tempCaregiverID", c => c.Int());
            AddColumn("dbo.socialHistory", "patientAllocationID", c => c.Int(nullable: false));
            AddColumn("dbo.patientAssignedDementia", "patientAllocationID", c => c.Int(nullable: false));
            AddColumn("dbo.personInCharge", "primaryUserTypeID", c => c.Int(nullable: false));
            AddColumn("dbo.personInCharge", "tempUserID", c => c.Int(nullable: false));
            AddColumn("dbo.personInCharge", "tempUserTypeID", c => c.Int(nullable: false));
            AddColumn("dbo.personInCharge", "reason", c => c.String(nullable: false));
            AddColumn("dbo.prescription", "patientAllocationID", c => c.Int(nullable: false));
            AddColumn("dbo.privacySettings", "patientAllocationID", c => c.Int(nullable: false));
            AddColumn("dbo.privacySettings", "sexuallyActiveBit", c => c.String(nullable: false, maxLength: 8));
            AddColumn("dbo.privacySettings", "secondhandSmokerBit", c => c.String(nullable: false, maxLength: 8));
            AddColumn("dbo.privacySettings", "alcoholUseBit", c => c.String(nullable: false, maxLength: 8));
            AddColumn("dbo.privacySettings", "caffeineUseBit", c => c.String(nullable: false, maxLength: 8));
            AddColumn("dbo.privacySettings", "tobaccoUseBit", c => c.String(nullable: false, maxLength: 8));
            AddColumn("dbo.privacySettings", "drugUseBit", c => c.String(nullable: false, maxLength: 8));
            AddColumn("dbo.privacySettings", "exerciseBit", c => c.String(nullable: false, maxLength: 8));
            AddColumn("dbo.privacySettings", "dietBit", c => c.String(nullable: false, maxLength: 8));
            AddColumn("dbo.privacySettings", "religionBit", c => c.String(nullable: false, maxLength: 8));
            AddColumn("dbo.privacySettings", "petBit", c => c.String(nullable: false, maxLength: 8));
            AddColumn("dbo.privacySettings", "occupationBit", c => c.String(nullable: false, maxLength: 8));
            AddColumn("dbo.privacySettings", "educationBit", c => c.String(nullable: false, maxLength: 8));
            AddColumn("dbo.privacySettings", "liveWithBit", c => c.String(nullable: false, maxLength: 8));
            AddColumn("dbo.privacySettings", "dislikeBit", c => c.String(nullable: false, maxLength: 8));
            AddColumn("dbo.privacySettings", "habitBit", c => c.String(nullable: false, maxLength: 8));
            AddColumn("dbo.privacySettings", "hobbyBit", c => c.String(nullable: false, maxLength: 8));
            AddColumn("dbo.privacySettings", "holidayExperienceBit", c => c.String(nullable: false, maxLength: 8));
            AddColumn("dbo.privacySettings", "lanugageBit", c => c.String(nullable: false, maxLength: 8));
            AddColumn("dbo.privacySettings", "likeBit", c => c.String(nullable: false, maxLength: 8));
            AddColumn("dbo.problemLog", "patientAllocationID", c => c.Int(nullable: false));
            AddColumn("dbo.vital", "patientAllocationID", c => c.Int(nullable: false));
            CreateIndex("dbo.activityExclusion", "patientAllocationID");
            CreateIndex("dbo.patientAllocation", "tempDoctorID");
            CreateIndex("dbo.patientAllocation", "tempCaregiverID");
            CreateIndex("dbo.AspNetUsers", "tempUserTypeID");
            CreateIndex("dbo.routine", "patientAllocationID");
            CreateIndex("dbo.activityPreferences", "patientAllocationID");
            CreateIndex("dbo.adHoc", "patientAllocationID");
            CreateIndex("dbo.allergy", "patientAllocationID");
            CreateIndex("dbo.socialHistory", "patientAllocationID");
            CreateIndex("dbo.patientAssignedDementia", "patientAllocationID");
            CreateIndex("dbo.personInCharge", "primaryUserTypeID");
            CreateIndex("dbo.personInCharge", "tempUserID");
            CreateIndex("dbo.personInCharge", "tempUserTypeID");
            CreateIndex("dbo.prescription", "patientAllocationID");
            CreateIndex("dbo.privacySettings", "patientAllocationID");
            CreateIndex("dbo.problemLog", "patientAllocationID");
            CreateIndex("dbo.vital", "patientAllocationID");
            AddForeignKey("dbo.AspNetUsers", "tempUserTypeID", "dbo.userType", "userTypeID");
            AddForeignKey("dbo.patientAllocation", "tempCaregiverID", "dbo.user", "userID");
            AddForeignKey("dbo.patientAllocation", "tempDoctorID", "dbo.user", "userID");
            AddForeignKey("dbo.activityExclusion", "patientAllocationID", "dbo.patientAllocation", "patientAllocationID", cascadeDelete: true);
            AddForeignKey("dbo.routine", "patientAllocationID", "dbo.patientAllocation", "patientAllocationID", cascadeDelete: true);
            AddForeignKey("dbo.activityPreferences", "patientAllocationID", "dbo.patientAllocation", "patientAllocationID", cascadeDelete: true);
            AddForeignKey("dbo.adHoc", "patientAllocationID", "dbo.patientAllocation", "patientAllocationID", cascadeDelete: true);
            AddForeignKey("dbo.allergy", "patientAllocationID", "dbo.patientAllocation", "patientAllocationID", cascadeDelete: true);
            AddForeignKey("dbo.socialHistory", "patientAllocationID", "dbo.patientAllocation", "patientAllocationID", cascadeDelete: true);
            AddForeignKey("dbo.patientAssignedDementia", "patientAllocationID", "dbo.patientAllocation", "patientAllocationID", cascadeDelete: true);
            AddForeignKey("dbo.personInCharge", "primaryUserTypeID", "dbo.userType", "userTypeID", cascadeDelete: false);
            AddForeignKey("dbo.personInCharge", "tempUserID", "dbo.user", "userID", cascadeDelete: false);
            AddForeignKey("dbo.personInCharge", "tempUserTypeID", "dbo.userType", "userTypeID", cascadeDelete: false);
            AddForeignKey("dbo.prescription", "patientAllocationID", "dbo.patientAllocation", "patientAllocationID", cascadeDelete: true);
            AddForeignKey("dbo.privacySettings", "patientAllocationID", "dbo.patientAllocation", "patientAllocationID", cascadeDelete: true);
            AddForeignKey("dbo.problemLog", "patientAllocationID", "dbo.patientAllocation", "patientAllocationID", cascadeDelete: true);
            AddForeignKey("dbo.vital", "patientAllocationID", "dbo.patientAllocation", "patientAllocationID", cascadeDelete: true);
            DropColumn("dbo.activityExclusion", "patientID");
            DropColumn("dbo.routine", "patientID");
            DropColumn("dbo.activityPreferences", "patientID");
            DropColumn("dbo.adHoc", "patientID");
            DropColumn("dbo.albumPatient", "patientID");
            DropColumn("dbo.allergy", "patientID");
            DropColumn("dbo.socialHistory", "patientID");
            DropColumn("dbo.patientAssignedDementia", "patientID");
            DropColumn("dbo.personInCharge", "notificationReceived");
            DropColumn("dbo.personInCharge", "notificationApproved");
            DropColumn("dbo.personInCharge", "notificationRejected");
            DropColumn("dbo.prescription", "patientID");
            DropColumn("dbo.privacySettings", "patientID");
            DropColumn("dbo.privacySettings", "columnNames");
            DropColumn("dbo.privacySettings", "privacyBitID");
            DropColumn("dbo.problemLog", "patientID");
            DropColumn("dbo.vital", "patientID");
        }
        
        public override void Down()
        {
            AddColumn("dbo.vital", "patientID", c => c.Int(nullable: false));
            AddColumn("dbo.problemLog", "patientID", c => c.Int(nullable: false));
            AddColumn("dbo.privacySettings", "DecimalValue_privacyBitID", c => c.Int());
            AddColumn("dbo.privacySettings", "binaryBit", c => c.String(maxLength: 16));
            AddColumn("dbo.privacySettings", "columnNames", c => c.String());
            AddColumn("dbo.privacySettings", "patientID", c => c.Int(nullable: false));
            AddColumn("dbo.prescription", "patientID", c => c.Int(nullable: false));
            AddColumn("dbo.personInCharge", "notificationRejected", c => c.Int(nullable: false));
            AddColumn("dbo.personInCharge", "notificationApproved", c => c.Int(nullable: false));
            AddColumn("dbo.personInCharge", "notificationReceived", c => c.Int(nullable: false));
            AddColumn("dbo.patientAssignedDementia", "patientID", c => c.Int(nullable: false));
            AddColumn("dbo.socialHistory", "patientID", c => c.Int(nullable: false));
            AddColumn("dbo.allergy", "patientID", c => c.Int(nullable: false));
            AddColumn("dbo.albumPatient", "patientID", c => c.Int(nullable: false));
            AddColumn("dbo.adHoc", "patientID", c => c.Int(nullable: false));
            AddColumn("dbo.activityPreferences", "patientID", c => c.Int(nullable: false));
            AddColumn("dbo.routine", "patientID", c => c.Int(nullable: false));
            AddColumn("dbo.activityExclusion", "patientID", c => c.Int(nullable: false));
            DropForeignKey("dbo.vital", "patientAllocationID", "dbo.patientAllocation");
            DropForeignKey("dbo.problemLog", "patientAllocationID", "dbo.patientAllocation");
            DropForeignKey("dbo.privacySettings", "patientAllocationID", "dbo.patientAllocation");
            DropForeignKey("dbo.prescription", "patientAllocationID", "dbo.patientAllocation");
            DropForeignKey("dbo.personInCharge", "tempUserTypeID", "dbo.userType");
            DropForeignKey("dbo.personInCharge", "tempUserID", "dbo.user");
            DropForeignKey("dbo.personInCharge", "primaryUserTypeID", "dbo.userType");
            DropForeignKey("dbo.patientAssignedDementia", "patientAllocationID", "dbo.patientAllocation");
            DropForeignKey("dbo.socialHistory", "patientAllocationID", "dbo.patientAllocation");
            DropForeignKey("dbo.allergy", "patientAllocationID", "dbo.patientAllocation");
            DropForeignKey("dbo.adHoc", "patientAllocationID", "dbo.patientAllocation");
            DropForeignKey("dbo.activityPreferences", "patientAllocationID", "dbo.patientAllocation");
            DropForeignKey("dbo.routine", "patientAllocationID", "dbo.patientAllocation");
            DropForeignKey("dbo.activityExclusion", "patientAllocationID", "dbo.patientAllocation");
            DropForeignKey("dbo.patientAllocation", "tempDoctorID", "dbo.user");
            DropForeignKey("dbo.patientAllocation", "tempCaregiverID", "dbo.user");
            DropForeignKey("dbo.AspNetUsers", "tempUserTypeID", "dbo.userType");
            DropIndex("dbo.vital", new[] { "patientAllocationID" });
            DropIndex("dbo.problemLog", new[] { "patientAllocationID" });
            DropIndex("dbo.privacySettings", new[] { "patientAllocationID" });
            DropIndex("dbo.prescription", new[] { "patientAllocationID" });
            DropIndex("dbo.personInCharge", new[] { "tempUserTypeID" });
            DropIndex("dbo.personInCharge", new[] { "tempUserID" });
            DropIndex("dbo.personInCharge", new[] { "primaryUserTypeID" });
            DropIndex("dbo.patientAssignedDementia", new[] { "patientAllocationID" });
            DropIndex("dbo.socialHistory", new[] { "patientAllocationID" });
            DropIndex("dbo.allergy", new[] { "patientAllocationID" });
            DropIndex("dbo.adHoc", new[] { "patientAllocationID" });
            DropIndex("dbo.activityPreferences", new[] { "patientAllocationID" });
            DropIndex("dbo.routine", new[] { "patientAllocationID" });
            DropIndex("dbo.AspNetUsers", new[] { "tempUserTypeID" });
            DropIndex("dbo.patientAllocation", new[] { "tempCaregiverID" });
            DropIndex("dbo.patientAllocation", new[] { "tempDoctorID" });
            DropIndex("dbo.activityExclusion", new[] { "patientAllocationID" });
            DropColumn("dbo.vital", "patientAllocationID");
            DropColumn("dbo.problemLog", "patientAllocationID");
            DropColumn("dbo.privacySettings", "likeBit");
            DropColumn("dbo.privacySettings", "lanugageBit");
            DropColumn("dbo.privacySettings", "holidayExperienceBit");
            DropColumn("dbo.privacySettings", "hobbyBit");
            DropColumn("dbo.privacySettings", "habitBit");
            DropColumn("dbo.privacySettings", "dislikeBit");
            DropColumn("dbo.privacySettings", "liveWithBit");
            DropColumn("dbo.privacySettings", "educationBit");
            DropColumn("dbo.privacySettings", "occupationBit");
            DropColumn("dbo.privacySettings", "petBit");
            DropColumn("dbo.privacySettings", "religionBit");
            DropColumn("dbo.privacySettings", "dietBit");
            DropColumn("dbo.privacySettings", "exerciseBit");
            DropColumn("dbo.privacySettings", "drugUseBit");
            DropColumn("dbo.privacySettings", "tobaccoUseBit");
            DropColumn("dbo.privacySettings", "caffeineUseBit");
            DropColumn("dbo.privacySettings", "alcoholUseBit");
            DropColumn("dbo.privacySettings", "secondhandSmokerBit");
            DropColumn("dbo.privacySettings", "sexuallyActiveBit");
            DropColumn("dbo.privacySettings", "patientAllocationID");
            DropColumn("dbo.prescription", "patientAllocationID");
            DropColumn("dbo.personInCharge", "reason");
            DropColumn("dbo.personInCharge", "tempUserTypeID");
            DropColumn("dbo.personInCharge", "tempUserID");
            DropColumn("dbo.personInCharge", "primaryUserTypeID");
            DropColumn("dbo.patientAssignedDementia", "patientAllocationID");
            DropColumn("dbo.socialHistory", "patientAllocationID");
            DropColumn("dbo.patientAllocation", "tempCaregiverID");
            DropColumn("dbo.patientAllocation", "tempDoctorID");
            DropColumn("dbo.allergy", "patientAllocationID");
            DropColumn("dbo.AspNetUsers", "tempUserTypeID");
            DropColumn("dbo.adHoc", "patientAllocationID");
            DropColumn("dbo.activityPreferences", "patientAllocationID");
            DropColumn("dbo.routine", "patientAllocationID");
            DropColumn("dbo.activityExclusion", "patientAllocationID");
            RenameIndex(table: "dbo.personInCharge", name: "IX_primaryUserID", newName: "IX_userID");
            RenameColumn(table: "dbo.personInCharge", name: "primaryUserID", newName: "userID");
            CreateIndex("dbo.vital", "patientID");
            CreateIndex("dbo.problemLog", "patientID");
            CreateIndex("dbo.privacySettings", "DecimalValue_privacyBitID");
            CreateIndex("dbo.privacySettings", "patientID");
            CreateIndex("dbo.prescription", "patientID");
            CreateIndex("dbo.patientAssignedDementia", "patientID");
            CreateIndex("dbo.socialHistory", "patientID");
            CreateIndex("dbo.allergy", "patientID");
            CreateIndex("dbo.albumPatient", "patientID");
            CreateIndex("dbo.adHoc", "patientID");
            CreateIndex("dbo.activityPreferences", "patientID");
            CreateIndex("dbo.routine", "patientID");
            CreateIndex("dbo.activityExclusion", "patientID");
            AddForeignKey("dbo.vital", "patientID", "dbo.patient", "patientID", cascadeDelete: true);
            AddForeignKey("dbo.problemLog", "patientID", "dbo.patient", "patientID", cascadeDelete: true);
            AddForeignKey("dbo.privacySettings", "patientID", "dbo.patient", "patientID", cascadeDelete: true);
            AddForeignKey("dbo.privacySettings", "DecimalValue_privacyBitID", "dbo.privacyBit", "privacyBitID");
            AddForeignKey("dbo.prescription", "patientID", "dbo.patient", "patientID", cascadeDelete: true);
            AddForeignKey("dbo.patientAssignedDementia", "patientID", "dbo.patient", "patientID", cascadeDelete: true);
            AddForeignKey("dbo.socialHistory", "patientID", "dbo.patient", "patientID", cascadeDelete: true);
            AddForeignKey("dbo.allergy", "patientID", "dbo.patient", "patientID", cascadeDelete: true);
            AddForeignKey("dbo.albumPatient", "patientID", "dbo.patient", "patientID", cascadeDelete: true);
            AddForeignKey("dbo.adHoc", "patientID", "dbo.patient", "patientID", cascadeDelete: true);
            AddForeignKey("dbo.activityPreferences", "patientID", "dbo.patient", "patientID", cascadeDelete: true);
            AddForeignKey("dbo.routine", "patientID", "dbo.patient", "patientID", cascadeDelete: true);
            AddForeignKey("dbo.activityExclusion", "patientID", "dbo.patient", "patientID", cascadeDelete: true);
        }
    }
}
